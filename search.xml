<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[一次完整HTTP流程：从输入网址到显示网页]]></title>
    <url>%2F2019%2F08%2F21%2Fhttp-procedure%2F</url>
    <content type="text"><![CDATA[&#x53C2;&#x8003;&#x535A;&#x5BA2;http://www.mamicode.com/info-detail-1792965.htmlhttps://www.cnblogs.com/xuzekun/p/7527736.htmlhttps://blog.51cto.com/linux5588/1351007 &#x4E00;&#x6B21;http&#x8BF7;&#x6C42;&#x8FC7;&#x7A0B;&#x6982;&#x89C8; &#x5BF9;URL&#x8FDB;&#x884C;DNS&#x57DF;&#x540D;&#x89E3;&#x6790;&#xFF0C;&#x89E3;&#x6790;&#x5230;&#x5BF9;&#x5E94;&#x7684;IP&#x5730;&#x5740;&#xFF1B; client&#x6839;&#x636E;ip&#x5730;&#x5740;&#xFF0C;&#x5411;&#x5BF9;&#x5E94;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x8D77;tcp&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x8FDE;&#x63A5;&#xFF1B; &#x5EFA;&#x7ACB;tcp&#x8FDE;&#x63A5;&#x540E;&#xFF0C;client&#x53D1;&#x8D77;http&#x8BF7;&#x6C42;&#xFF1B; &#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;http&#x8BF7;&#x6C42;(&#x8FD4;&#x56DE;&#x72B6;&#x6001;&#x7801;)&#xFF0C;client&#x83B7;&#x53D6;&#x5230;html&#x4EE3;&#x7801;&#xFF1B; client&#x89E3;&#x6790;index.html&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x8BF7;&#x6C42;html&#x4E2D;&#x7684;&#x8D44;&#x6E90;(js&#xFF0C;css&#x7B49;)&#xFF1B; &#x6D4F;&#x89C8;&#x5668;&#x6E32;&#x67D3;&#x9875;&#x9762;&#x5E76;&#x663E;&#x793A;&#x3002; &#x5177;&#x4F53;&#x7EC6;&#x8282;1&#x3001;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x2460; &#x6D4F;&#x89C8;&#x5668;&#x9996;&#x5148;&#x641C;&#x7D22;&#x6D4F;&#x89C8;&#x5668;&#x81EA;&#x8EAB;&#x7684;DNS&#x7F13;&#x5B58;&#xFF08;&#x7F13;&#x5B58;&#x65F6;&#x95F4;&#x6BD4;&#x8F83;&#x77ED;&#xFF0C;&#x5927;&#x6982;&#x53EA;&#x6709;1&#x5206;&#x949F;&#xFF0C;&#x4E14;&#x53EA;&#x80FD;&#x5BB9;&#x7EB3;1000&#x6761;&#x7F13;&#x5B58;&#xFF09;&#xFF0C;&#x770B;&#x81EA;&#x8EAB;&#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x662F;&#x5426;&#x6709;URL&#x5BF9;&#x5E94;&#x7684;&#x6761;&#x76EE;&#xFF0C;&#x800C;&#x4E14;&#x6CA1;&#x6709;&#x8FC7;&#x671F;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4E14;&#x6CA1;&#x6709;&#x8FC7;&#x671F;&#x5219;&#x89E3;&#x6790;&#x5230;&#x6B64;&#x7ED3;&#x675F;&#xFF1B;&#x2461; &#x82E5;&#x672A;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x641C;&#x7D22;&#x7CFB;&#x7EDF;&#x7684;DNS&#x7F13;&#x5B58;&#xFF1B;&#x2462; &#x82E5;&#x4ECD;&#x672A;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x68C0;&#x67E5;&#x672C;&#x5730;host&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5B58;&#x5728;&#x8BE5;&#x7F51;&#x5740;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x2463; &#x5982;&#x679C;&#x90FD;&#x6CA1;&#x6709;&#x5219;&#x9012;&#x5F52;&#x5730;&#x53BB;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x53BB;&#x67E5;&#x627E;&#xFF0C;&#x5982;&#x4E0B;&#x56FE; 2&#x3001;&#x5EFA;&#x7ACB;TCP&#x8FDE;&#x63A5;&#xFF0C;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x83B7;&#x53D6;&#x5230;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x7684;ip&#x5730;&#x5740;&#x4E4B;&#x540E;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x4EE5;&#x67D0;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x7AEF;&#x53E3;&#x5411;&#x670D;&#x52A1;&#x5668;WEB&#x7A0B;&#x5E8F;&#x7684;80&#x7AEF;&#x53E3;&#x53D1;&#x8D77;TCP&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x3002;&#x8BE6;&#x89C1;TCP&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x4E0E;&#x56DB;&#x6B21;&#x6325;&#x624B; 3&#x3001;&#x53D1;&#x8D77;http&#x8BF7;&#x6C42;HTTP&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x5305;&#x62EC;&#x4E09;&#x90E8;&#x5206;&#xFF1A;&#x8BF7;&#x6C42;&#x884C;&#xFF0C;&#x8BF7;&#x6C42;&#x5934;&#x548C;&#x8BF7;&#x6C42;&#x6B63;&#x6587; &#x3010;&#x8BF7;&#x6C42;&#x884C;&#x3011;&#x8BF7;&#x6C42;&#x65B9;&#x6CD5; &#x7A7A;&#x683C; &#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#x5730;&#x5740;(URI&#x3001;&#x65E0;&#x57DF;&#x540D;) &#x7A7A;&#x683C; HTTP&#x7248;&#x672C; &#x7A7A;&#x683C; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x8BF7;&#x6C42;&#x5934;&#x3011;&#x6807;&#x8BC6;:&#x5185;&#x5BB9; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x7A7A;&#x4E00;&#x884C;&#x3011;(&#x8868;&#x793A;&#x8BF7;&#x6C42;&#x5934;&#x7ED3;&#x675F;) &#x3010;&#x8BF7;&#x6C42;&#x4E3B;&#x4F53;&#x3011;&#xFF08;&#x5373;&#x8BF7;&#x6C42;&#x6B63;&#x6587;&#xFF0C;&#x7528;&#x6237;&#x7684;&#x4E3B;&#x8981;&#x6570;&#x636E;&#x3002;POST&#x65B9;&#x5F0F;&#x65F6;&#x4F7F;&#x7528;&#xFF0C;GET&#x65E0;&#x8BF7;&#x6C42;&#x4E3B;&#x4F53;&#x3002;GET&#x65B9;&#x5F0F;&#x662F;&#x4FDD;&#x5B58;&#x5728;url&#x5730;&#x5740;&#x540E;&#x9762;&#xFF0C;&#x4E0D;&#x4F1A;&#x653E;&#x5230;&#x8FD9;&#x91CC;&#xFF09; get&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x4E3E;&#x4F8B; 12345678GET /java/ HTTP/1.0 (&#x8BF7;&#x6C42;&#x884C;)referer: https://jc-yang.github.io/ (&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF7;&#x6C42;&#x5934;&#x54E6;)sec-fetch-mode: navigate sec-fetch-site: none sec-fetch-user: ?1 upgrade-insecure-requests: 1 user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36 (&#x7A7A;&#x884C;&#xFF0C;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x8BF7;&#x6C42;&#x5934;&#x7ED3;&#x675F;) post&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x4E3E;&#x4F8B; 12345678910111213141516POST http://oa.funds.com.cn:9080/ HTTP/1.1 (&#x8BF7;&#x6C42;&#x884C;)Accept: */* (&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF7;&#x6C42;&#x5934;&#x54E6;)Referer: http://oa.funds.com.cn:9080/DMFramework/Accept-Language: zh-CNUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727;)Content-Type: multipart/form-data; boundary=---------------------------7e21361611db0Accept-Encoding: gzip, deflateHost: oa.funds.com.cn:9080Content-Length: 14623Connection: Keep-Alive (&#x7A7A;&#x884C;&#xFF0C;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x8BF7;&#x6C42;&#x5934;&#x7ED3;&#x675F;)-----------------------------7e21361611db0 (&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF7;&#x6C42;&#x6B63;&#x6587;)Content-Disposition: form-data; name=&quot;nameAttachMentIDs&quot;-----------------------------7e21361611db0 &#x8BF7;&#x6C42;&#x5934; Connection&#xFF0C;Connection&#x8BBE;&#x7F6E;&#x4E3A;keep-alive&#x7528;&#x4E8E;&#x8BF4;&#x660E;&#x5BA2;&#x6237;&#x7AEF;&#x8FD9;&#x8FB9;&#x8BBE;&#x7F6E;&#x7684;&#x662F;&#xFF0C;&#x672C;&#x6B21;HTTP&#x8BF7;&#x6C42;&#x4E4B;&#x540E;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x95ED;TCP&#x8FDE;&#x63A5;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4F7F;&#x4E0B;&#x6B21;HTTP&#x8BF7;&#x6C42;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;TCP&#x901A;&#x9053;&#xFF0C;&#x8282;&#x7701;TCP&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x7684;&#x65F6;&#x95F4; 4&#x3001;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;http&#x8BF7;&#x6C42;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x83B7;&#x5F97;html&#x4EE3;&#x7801;HTTP&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x4E5F;&#x5305;&#x62EC;&#x4E09;&#x90E8;&#x5206;&#xFF1A; &#x54CD;&#x5E94;&#x884C;&#xFF0C;&#x54CD;&#x5E94;&#x5934;&#xFF0C;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;(&#x4E5F;&#x53EF;&#x4EE5;&#x53EB; &#x72B6;&#x6001;&#x884C;&#xFF0C;&#x6D88;&#x606F;&#x62A5;&#x5934;&#xFF0C;&#x54CD;&#x5E94;&#x6B63;&#x6587;) &#x3010;&#x72B6;&#x6001;&#x884C;&#x3011;HTTP&#x7248;&#x672C; &#x7A7A;&#x683C; &#x72B6;&#x6001;&#x7801; &#x7A7A;&#x683C; &#x72B6;&#x6001;&#x7801;&#x63CF;&#x8FF0; &#x7A7A;&#x683C; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x5934;&#x3011;&#x6807;&#x8BC6;:&#x5185;&#x5BB9; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x7A7A;&#x4E00;&#x884C;&#x3011;(&#x8868;&#x793A;&#x54CD;&#x5E94;&#x5934;&#x7ED3;&#x675F;) &#x3010;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;&#x3011;(&#x6240;&#x8C13;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;&#xFF0C;&#x5C31;&#x662F;&#x670D;&#x52A1;&#x5668;&#x8FD4;&#x56DE;&#x7684;&#x8D44;&#x6E90;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5373;&#x6574;&#x4E2A;HTML&#x6587;&#x4EF6;) post&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x4E3E;&#x4F8B; 12345678910111213HTTP/1.1 200 OK (&#x72B6;&#x6001;&#x884C;)Content-Type: text/html;charset=GBK (&#x4EE5;&#x4E0B;&#x4E3A;&#x54CD;&#x5E94;&#x5934;&#x54E6;)Content-Language: zh-CNDate: Tue, 03 Apr 2018 05:59:10 GMTServer: WebSphere Application Server/6.1Content-Length: 137214 (&#x7A7A;&#x884C;&#xFF0C;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x54CD;&#x5E94;&#x5934;&#x7ED3;&#x675F;) (&#x4EE5;&#x4E0B;&#x4E3A;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;&#xFF0C;&#x5373;HTML)&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt; get&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x4E0E;post&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x7ED3;&#x679C;&#x57FA;&#x672C;&#x76F8;&#x540C;&#xFF0C;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002; &#x670D;&#x52A1;&#x5668;&#x7AEF;&#x63A5;&#x6536;&#x5230;http&#x8BF7;&#x6C42;&#x540E;&#x5982;&#x4F55;&#x751F;&#x6210;html&#x6587;&#x4EF6;&#x6B64;&#x5904;&#x4E5F;&#x4E0D;&#x8D58;&#x8FF0; &#x5E38;&#x89C1;&#x72B6;&#x6001;&#x7801;&#x53CA;&#x5176;&#x63CF;&#x8FF0; 1xx&#xFF1A;&#x3000;&#x3000;&#x6307;&#x793A;&#x4FE1;&#x606F;&#x2014;&#x2014;&#x8868;&#x793A;&#x8BF7;&#x6C42;&#x5DF2;&#x63A5;&#x6536;&#xFF0C;&#x7EE7;&#x7EED;&#x5904;&#x7406;2xx&#xFF1A;&#x3000;&#x3000;&#x6210;&#x529F;&#x2014;&#x2014;&#x8868;&#x793A;&#x8BF7;&#x6C42;&#x5DF2;&#x88AB;&#x6210;&#x529F;&#x63A5;&#x6536;&#x3001;&#x7406;&#x89E3;&#x3001;&#x63A5;&#x53D7;3xx&#xFF1A;&#x3000;&#x3000;&#x91CD;&#x5B9A;&#x5411;&#x2014;&#x2014;&#x8981;&#x5B8C;&#x6210;&#x8BF7;&#x6C42;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x66F4;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x64CD;&#x4F5C;4xx&#xFF1A;&#x3000;&#x3000;&#x5BA2;&#x6237;&#x7AEF;&#x9519;&#x8BEF;&#x2014;&#x2014;&#x8BF7;&#x6C42;&#x6709;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#x6216;&#x8BF7;&#x6C42;&#x65E0;&#x6CD5;&#x5B9E;&#x73B0;5xx&#xFF1A;&#x3000;&#x3000;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x9519;&#x8BEF;&#x2014;&#x2014;&#x670D;&#x52A1;&#x5668;&#x672A;&#x80FD;&#x5B9E;&#x73B0;&#x5408;&#x6CD5;&#x7684;&#x8BF7;&#x6C42; 200 OK &#xFF1A; &#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x6210;&#x529F;400 Bad Request&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x65E0;&#x6CD5;&#x89E3;&#x6790;401 Unauthorized&#xFF1A;&#x8BF7;&#x6C42;&#x672A;&#x7ECF;&#x6388;&#x6743;403 Forbidden&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x62D2;&#x7EDD;&#x670D;&#x52A1;404 Not Found&#xFF1A;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5E38;&#x89C1;URL&#x9519;&#x8BEF;500 Internal Server Error&#xFF1A;&#x670D;&#x52A1;&#x7AEF;&#x4E0D;&#x53EF;&#x9884;&#x671F;&#x9519;&#x8BEF;503 Server Unavailable&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x5F53;&#x524D;&#x4E0D;&#x80FD;&#x5904;&#x7406;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42; 5&#x3001;&#x6D4F;&#x89C8;&#x5668;&#x89E3;&#x6790;html&#xFF0C;&#x8BF7;&#x6C42;html&#x4E2D;&#x7684;&#x8D44;&#x6E90;&#x6D4F;&#x89C8;&#x5668;&#x62FF;&#x5230;index.html&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x5C31;&#x5F00;&#x59CB;&#x89E3;&#x6790;&#x5176;&#x4E2D;&#x7684;html&#x4EE3;&#x7801;&#xFF0C;&#x9047;&#x5230;js/css/image&#x7B49;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x65F6;&#xFF0C;&#x5C31;&#x5411;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53BB;&#x8BF7;&#x6C42;&#x4E0B;&#x8F7D;&#xFF08;&#x4F1A;&#x4F7F;&#x7528;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#x8F7D;&#xFF0C;&#x6BCF;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x7EBF;&#x7A0B;&#x6570;&#x4E0D;&#x4E00;&#x6837;&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x7528;&#x4E0A;keep-alive&#x7279;&#x6027;&#x4E86;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E00;&#x6B21;HTTP&#x8FDE;&#x63A5;&#xFF0C;&#x53EF;&#x4EE5;&#x8BF7;&#x6C42;&#x591A;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C;&#x4E0B;&#x8F7D;&#x8D44;&#x6E90;&#x7684;&#x987A;&#x5E8F;&#x5C31;&#x662F;&#x6309;&#x7167;&#x4EE3;&#x7801;&#x91CC;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x6BCF;&#x4E2A;&#x8D44;&#x6E90;&#x5927;&#x5C0F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x800C;&#x6D4F;&#x89C8;&#x5668;&#x53C8;&#x591A;&#x7EBF;&#x7A0B;&#x8BF7;&#x6C42;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#xFF0C;&#x6240;&#x4EE5;&#x4ECE;&#x4E0B;&#x56FE;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x91CC;&#x663E;&#x793A;&#x7684;&#x987A;&#x5E8F;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x4EE3;&#x7801;&#x91CC;&#x9762;&#x7684;&#x987A;&#x5E8F;&#x3002; 6&#x3001;&#x6D4F;&#x89C8;&#x5668;&#x6E32;&#x67D3;&#x9875;&#x9762;&#xFF0C;&#x663E;&#x793A;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x6CA1;&#x6709;&#x5B8C;&#x6574;&#x63A5;&#x53D7;&#x5168;&#x90E8;HTML&#x6587;&#x6863;&#x65F6;&#xFF0C;&#x5B83;&#x5C31;&#x5DF2;&#x7ECF;&#x5F00;&#x59CB;&#x663E;&#x793A;&#x8FD9;&#x4E2A;&#x9875;&#x9762;&#x4E86;&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4F55;&#x6E32;&#x67D3;&#x6D89;&#x53CA;&#x5230;&#x524D;&#x7AEF;&#x548C;&#x6D4F;&#x89C8;&#x5668;&#x5185;&#x5BB9;&#xFF0C;&#x6B64;&#x5904;&#x4E0D;&#x8D58;&#x8FF0;&#x3002;]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
        <tag>TCP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TCP三次握手与四次挥手]]></title>
    <url>%2F2019%2F08%2F21%2FTCP%2F</url>
    <content type="text"><![CDATA[&#x53C2;&#x8003;&#x535A;&#x5BA2; https://www.cnblogs.com/zhuzhenwei918/p/7465467.htmlhttp://www.mamicode.com/info-detail-1792965.htmlhttps://www.cnblogs.com/engeng/articles/5959335.html TCP&#x901A;&#x4FE1;&#x5305;&#x62EC;&#x4E86;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#xFF1A;TCP&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF0C;&#x4F20;&#x8F93;&#x6570;&#x636E;&#xFF0C;&#x65AD;&#x5F00;TCP&#x8FDE;&#x63A5;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x4E09;&#x6B21;&#x63E1;&#x624B; &#x7B2C;&#x4E00;&#x6B21;&#x63E1;&#x624B;&#xFF1A;&#x5C06;Client&#x6807;&#x5FD7;&#x4F4D;SYN&#x8BBE;&#x7F6E;&#x4E3A;1&#xFF0C;&#x968F;&#x673A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x503C;seq = x&#xFF1B; &#x7B2C;&#x4E8C;&#x6B21;&#x63E1;&#x624B;&#xFF1A;Server&#x5728;&#x6536;&#x5230;Client&#x4F20;&#x6765;&#x7684;SYN&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x786E;&#x8BA4;(ack=x+1)&#xFF0C;&#x540C;&#x65F6;&#x81EA;&#x5DF1;&#x4E5F;&#x53D1;&#x9001;&#x4E00;&#x4E2A;SYN&#x5305;(seq=y)&#xFF0C;&#x5373;SYN+ACK&#x5305;&#xFF0C;&#x6B64;&#x65F6;Server&#x8FDB;&#x5165;SYN-RECV&#x72B6;&#x6001;&#xFF1B; &#x7B2C;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x6536;&#x5230;&#x670D;&#x52A1;&#x5668;&#x7684;SYN+ACK&#x5305;&#xFF0C;&#x5411;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;&#x786E;&#x8BA4;&#x5305;ACK(ack=y+1)&#xFF0C;&#x53D1;&#x9001;&#x5B8C;&#x6210;&#x540E;Client&#x548C;Server&#x8FDB;&#x5165;ESTABLISHED&#x72B6;&#x6001;.&#x8FD9;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF0C;&#x5F00;&#x59CB;&#x901A;&#x4FE1;&#x3002; &#x6570;&#x636E;&#x4F20;&#x8F93;&#x8D85;&#x65F6;&#x91CD;&#x4F20;&#x3001;&#x5FEB;&#x901F;&#x91CD;&#x4F20;&#x3001;&#x6D41;&#x91CF;&#x63A7;&#x5236;&#x3001;&#x62E5;&#x585E;&#x63A7;&#x5236;&#x7B49;&#x7B49;&#x3002;&#xFF08;&#x8FD9;&#x4E00;&#x5207;&#x90FD;&#x662F;&#x4E3A;&#x4E86;&#x63D0;&#x4F9B;&#x53EF;&#x9760;&#x7684;&#x5B57;&#x8282;&#x6D41;&#x670D;&#x52A1;&#xFF09; &#x56DB;&#x6B21;&#x6325;&#x624B; &#x7B2C;&#x4E00;&#x6B21;&#x6325;&#x624B;&#xFF1A;Client&#x53D1;&#x9001;FIN&#x6570;&#x636E;&#x5305;(&#x5047;&#x8BBE;&#x4E3A;seq=x+2)&#x6765;&#x5173;&#x95ED;Client&#x5230;Server&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E3B;&#x52A8;&#x5173;&#x95ED;&#x65B9;&#x544A;&#x8BC9;&#x88AB;&#x52A8;&#x5173;&#x95ED;&#x65B9;&#xFF1A;&#x6211;&#x5DF2;&#x7ECF;&#x4E0D;&#x4F1A;&#x518D;&#x7ED9;&#x4F60;&#x53D1;&#x6570;&#x636E;&#x4E86; &#x7B2C;&#x4E8C;&#x6B21;&#x6325;&#x624B;&#xFF1A;&#x88AB;&#x52A8;&#x5173;&#x95ED;&#x65B9;&#x6536;&#x5230;FIN&#x5305;&#x540E;&#xFF0C;&#x53D1;&#x9001;&#x4E00;&#x4E2A;ACK&#x7ED9;&#x5BF9;&#x65B9;&#xFF0C;&#x786E;&#x8BA4;&#x5E8F;&#x53F7;&#x4E3A;&#x6536;&#x5230;&#x5E8F;&#x53F7;+1(&#x4E0E;SYN&#x76F8;&#x540C;&#xFF0C;&#x4E00;&#x4E2A;FIN&#x5360;&#x7528;&#x4E00;&#x4E2A;&#x5E8F;&#x53F7;)&#x3002;Server&#x8FDB;&#x5165;CLOSE_WAIT&#x72B6;&#x6001;&#x3002; &#x7B2C;&#x4E09;&#x6B21;&#x6325;&#x624B;&#xFF1A;Server&#x53D1;&#x9001;&#x4E00;&#x4E2A;FIN&#x5305;&#x7528;&#x6765;&#x65AD;&#x5F00;Server&#x5230;Client&#x7684;&#x8FDE;&#x63A5;&#xFF1A;&#x88AB;&#x52A8;&#x5173;&#x95ED;&#x65B9;&#x53D1;&#x9001;&#x4E00;&#x4E2A;FIN&#xFF0C;&#x7528;&#x6765;&#x5173;&#x95ED;&#x88AB;&#x52A8;&#x5173;&#x95ED;&#x65B9;&#x5230;&#x4E3B;&#x52A8;&#x5173;&#x95ED;&#x65B9;&#x7684;&#x6570;&#x636E;&#x4F20;&#x9001; &#x7B2C;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF1A;Client&#x6536;&#x5230;Server&#x53D1;&#x6765;&#x7684;FIN&#x5305;&#x540E;&#xFF0C;&#x56DE;&#x590D;&#x4E00;&#x4E2A;ACK&#xFF0C;&#x786E;&#x8BA4;&#x5E8F;&#x53F7;&#x4E3A;&#x6536;&#x5230;&#x5E8F;&#x53F7;+1&#xFF0C;&#x81F3;&#x6B64;&#x8FDE;&#x63A5;&#x5168;&#x90E8;&#x65AD;&#x5F00;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x662F;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF0C;&#x56DB;&#x6B21;&#x6325;&#x624B;TCP&#x662F;&#x5168;&#x53CC;&#x5DE5; &#x7684;&#xFF0C;&#x5373;&#x5BA2;&#x6237;&#x7AEF;&#x5728;&#x7ED9;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53D1;&#x9001;&#x4FE1;&#x606F;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x4E5F;&#x53EF;&#x4EE5;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x4FE1;&#x606F;&#x3002;(&#x534A;&#x53CC;&#x5DE5;&#xFF1A;A&#x53EF;&#x4EE5;&#x7ED9;B&#x53D1;&#xFF0C;B&#x4E5F;&#x53EF;&#x4EE5;&#x7ED9;A&#x53D1;&#xFF0C;&#x4F46;&#x662F;A&#x5728;&#x7ED9;B&#x53D1;&#x7684;&#x65F6;&#x5019;&#xFF0C;B&#x4E0D;&#x80FD;&#x7ED9;A&#x53D1;&#xFF0C;&#x5373;&#x4E0D;&#x540C;&#x65F6;)(&#x5355;&#x5DE5;&#xFF1A;&#x53EA;&#x80FD;A&#x7ED9;B&#x53D1;&#xFF0C;B&#x4E0D;&#x80FD;&#x7ED9;A&#x53D1;) &#x63E1;&#x624B;&#x5982;&#x679C;&#x63E1;&#x624B;&#x4E24;&#x6B21;&#xFF0C;&#x90A3;&#x4E48;Server&#x65E0;&#x6CD5;&#x786E;&#x5B9A;server&#x7684;&#x4FE1;&#x606F;client&#x662F;&#x5426;&#x80FD;&#x6536;&#x5230;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;server&#x53D1;&#x51FA;&#x7684;&#x4FE1;&#x53F7;&#xFF0C;&#x53EF;&#x80FD;&#x540E;&#x9762;&#x7684;client&#x90FD;&#x6536;&#x4E0D;&#x5230;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x3002; &#x5982;&#x679C;&#x63E1;&#x624B;&#x56DB;&#x6B21;&#xFF0C;&#x90A3;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x6D6A;&#x8D39;&#xFF0C;&#x56E0;&#x4E3A;&#x4E09;&#x6B21;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#x5DF2;&#x7ECF;&#x53EF;&#x4EE5;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x3002; &#x6325;&#x624B;&#x7531;&#x4E8E;TCP&#x662F;&#x5168;&#x53CC;&#x5DE5;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x4E2A;&#x65B9;&#x5411;&#x90FD;&#x9700;&#x8981;&#x5355;&#x72EC;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x3002; &#x5F53;&#x4E00;&#x65B9;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x53D1;&#x9001;&#x4EFB;&#x52A1;&#x540E;&#xFF0C;&#x53D1;&#x9001;&#x4E00;&#x4E2A;FIN&#x6765;&#x7EC8;&#x6B62;&#x8FD9;&#x4E00;&#x65B9;&#x5411;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x6536;&#x5230;&#x4E00;&#x4E2A;FIN&#x53EA;&#x662F;&#x610F;&#x5473;&#x7740;&#x8FD9;&#x4E00;&#x65B9;&#x5411;&#x4E0A;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x6D41;&#x52A8;&#x4E86;&#xFF0C;&#x5373;&#x4E0D;&#x4F1A;&#x518D;&#x6536;&#x5230;&#x6570;&#x636E;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x8FD9;&#x4E2A;TCP&#x8FDE;&#x63A5;&#x4E0A;&#x4ECD;&#x7136;&#x80FD;&#x591F;&#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x76F4;&#x5230;&#x8FD9;&#x4E00;&#x65B9;&#x5411;&#x4E5F;&#x53D1;&#x9001;&#x4E86;FIN&#x4E3A;&#x6B62;&#x3002;&#x9996;&#x5148;&#x8FDB;&#x884C;&#x5173;&#x95ED;&#x7684;&#x4E00;&#x65B9;&#x5C06;&#x6267;&#x884C;&#x4E3B;&#x52A8;&#x5173;&#x95ED;&#xFF0C;&#x800C;&#x53E6;&#x4E00;&#x65B9;&#x5219;&#x6267;&#x884C;&#x88AB;&#x52A8;&#x5173;&#x95ED;&#x3002;]]></content>
      <categories>
        <category>网络协议</category>
      </categories>
      <tags>
        <tag>面试</tag>
        <tag>TCP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LeetCode 2018面试高频算法]]></title>
    <url>%2F2019%2F08%2F17%2FLeetcode2018Interview%2F</url>
    <content type="text"><![CDATA[&#x7B80;&#x5355;&#x9898;&#x5F00;&#x59CB;&#x4E4B;&#x524D;136 &#x53EA;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x7684;&#x6570;&#x5B57;https://leetcode-cn.com/problems/single-number/ 169 &#x6C42;&#x4F17;&#x6570;https://leetcode-cn.com/problems/two-sum/solution/qiu-zhong-shu-by-leetcode-2/ 1int major = nums.length/2;//&#x6C42;&#x4F17;&#x6570;&#x7684;&#x6761;&#x4EF6; &#x65B9;&#x6CD5;&#x4E00; &#x66B4;&#x529B;&#x641C;&#x7D22;&#x6CD5; &#x4E0D;&#x5EFA;&#x8BAE;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O(n2),&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;O(1) 1234567891011121314151617181920class Solution { public int majorityElement(int[] nums) { if(nums.length &lt;= 0){ return -1; } for(int i=0;i&lt;nums.length;i++){ int count = 0;//&#x6CE8;&#x610F;&#x521D;&#x59CB;&#x5316;&#x4F4D;&#x7F6E;&#xFF0C;&#x6BCF;&#x6B21;&#x68C0;&#x67E5;&#x5B8C;i&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x540E;&#x9700;&#x8981;&#x628A;count&#x6E05;0&#xFF0C;&#x91CD;&#x65B0;&#x8BA1;&#x6570; for(int j=0;j&lt;nums.length;j++){//count&#x521D;&#x59CB;&#x4E3A;0.&#x6240;&#x4EE5;&#x4ECD;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB; if(nums[j] == nums[i]){ count++; } } if(count &gt; nums.length/2){ return nums[i]; } } return -1; }} &#x65B9;&#x6CD5;&#x4E8C; Map&#x904D;&#x5386;&#x6CD5;Map&#x5E38;&#x7528;&#x4E8E;&#x8BA1;&#x6570;&#x65B9;&#x9762;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x8981;&#x7262;&#x8BB0;&#x5176;&#x521D;&#x59CB;&#x5316;&#x548C;&#x904D;&#x5386;&#x65B9;&#x6CD5; &#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;O(n),&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;O(n) 123456789101112131415161718192021222324252627class Solution { public int majorityElement(int[] nums) { int major = nums.length/2; Map&lt;Integer,Integer&gt; map = numsMap(nums);//map&#x521D;&#x59CB;&#x5316; if(nums.length&lt;=0) { return -1; } for(Integer num:map.keySet()) {//Map&#x904D;&#x5386;&#x7684;&#x65B9;&#x5F0F;&#x4E4B;&#x4E00; if(map.get(num)&gt;major) { return num; } } return -1; } public Map&lt;Integer,Integer&gt; numsMap(int[] nums){//map&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5; Map&lt;Integer,Integer&gt; map = new HashMap&lt;Integer, Integer&gt;(); for(int num:nums) { if(!map.containsKey(num)) { map.put(num, 1); }else { map.put(num, map.get(num)+1); } } return map; }} &#x65B9;&#x6CD5;&#x4E09; Boyer-Moore &#x6295;&#x7968;&#x7B97;&#x6CD5;&#x60F3;&#x6CD5;: &#x5982;&#x679C;&#x6211;&#x4EEC;&#x628A;&#x4F17;&#x6570;&#x8BB0;&#x4E3A; +1 &#xFF0C;&#x628A;&#x5176;&#x4ED6;&#x6570;&#x8BB0;&#x4E3A; -1 &#xFF0C;&#x5C06;&#x5B83;&#x4EEC;&#x5168;&#x90E8;&#x52A0;&#x8D77;&#x6765;&#xFF0C;&#x663E;&#x7136;&#x548C;&#x5927;&#x4E8E; 0 &#xFF0C;&#x4ECE;&#x7ED3;&#x679C;&#x672C;&#x8EAB;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x4F17;&#x6570;&#x6BD4;&#x5176;&#x4ED6;&#x6570;&#x591A;&#x3002; &#xFF08;&#x7AD6;&#x7EBF;&#x7528;&#x6765;&#x5212;&#x5206;&#x6BCF;&#x6B21;&#x8BA1;&#x6570;&#x5668;&#x5F52;&#x96F6;&#x7684;&#x60C5;&#x51B5;&#xFF09;[7, 7, 5, 7, 5, 1 | 5, 7 | 5, 5, 7, 7 | 7, 7, 7, 7] &#x9996;&#x5148;&#xFF0C;&#x4E0B;&#x6807;&#x4E3A; 0 &#x7684; 7 &#x88AB;&#x5F53;&#x505A;&#x4F17;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x3002;&#x5728;&#x4E0B;&#x6807;&#x4E3A; 5 &#x5904;&#xFF0C;&#x8BA1;&#x6570;&#x5668;&#x4F1A;&#x53D8;&#x56DE;0 &#x3002;&#x6240;&#x4EE5;&#x4E0B;&#x6807;&#x4E3A; 6 &#x7684; 5 &#x662F;&#x4E0B;&#x4E00;&#x4E2A;&#x4F17;&#x6570;&#x7684;&#x5019;&#x9009;&#x8005;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x4E2D; 7 &#x662F;&#x771F;&#x6B63;&#x7684;&#x4F17;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x901A;&#x8FC7;&#x5FFD;&#x7565;&#x6389;&#x524D;&#x9762;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x6211;&#x4EEC;&#x5FFD;&#x7565;&#x6389;&#x4E86;&#x540C;&#x6837;&#x591A;&#x6570;&#x76EE;&#x7684;&#x4F17;&#x6570;&#x548C;&#x975E;&#x4F17;&#x6570;&#x3002;&#x56E0;&#x6B64;&#xFF0C; 7 &#x4ECD;&#x7136;&#x662F;&#x5269;&#x4E0B;&#x6570;&#x5B57;&#x4E2D;&#x7684;&#x4F17;&#x6570;&#x3002; 123456789101112//&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;&#x76F8;&#x540C;&#x5C31;+1&#xFF1B;&#x4E0D;&#x540C;&#x5C31;-1 public static int majorEle2(int[] nums) { int count = 0; int candidate = nums[0]; for(int num:nums) { if(count == 0) { candidate = num; } count += (candidate == num)? 1:-1; } return candidate; } 88. &#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6709;&#x5E8F;&#x6570;&#x7EC4;https://leetcode-cn.com/problems/merge-sorted-array/&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6709;&#x5E8F;&#x6574;&#x6570;&#x6570;&#x7EC4; nums1 &#x548C; nums2&#xFF0C;&#x5C06; nums2 &#x5408;&#x5E76;&#x5230; nums1 &#x4E2D;&#xFF0C;&#x4F7F;&#x5F97; num1 &#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x6709;&#x5E8F;&#x6570;&#x7EC4;&#x3002; &#x8BF4;&#x660E;: &#x521D;&#x59CB;&#x5316; nums1 &#x548C; nums2 &#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x5206;&#x522B;&#x4E3A; m &#x548C; n&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x5047;&#x8BBE; nums1 &#x6709;&#x8DB3;&#x591F;&#x7684;&#x7A7A;&#x95F4;&#xFF08;&#x7A7A;&#x95F4;&#x5927;&#x5C0F;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E; m + n&#xFF09;&#x6765;&#x4FDD;&#x5B58; nums2 &#x4E2D;&#x7684;&#x5143;&#x7D20;&#x3002;&#x793A;&#x4F8B;: 12345&#x8F93;&#x5165;:nums1 = [1,2,3,0,0,0], m = 3nums2 = [2,5,6], n = 3&#x8F93;&#x51FA;:&#xA0;[1,2,2,3,5,6] &#x6B64;&#x5904;&#x8003;&#x8651;&#x5230;&#x82E5;&#x4ECE;&#x524D;&#x5F80;&#x540E; &#x6BD4;&#x8F83;&#x5E76;&#x6392;&#x5E8F;&#x9700;&#x8981;&#x628A;&#x540E;&#x9762;&#x7684;&#x6570;&#x5B57;&#x632A;&#x52A8;&#xFF0C;&#x4E3A;&#x907F;&#x514D;&#x632A;&#x52A8;&#x589E;&#x5927;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x4ECE;&#x540E;&#x5F80;&#x524D;&#x6BD4;&#x8F83;&#x5E76;&#x586B;&#x5145; 123456789101112131415161718class Solution { public void merge(int[] nums1, int m, int[] nums2, int n) { int p = m+n-1;//&#x5408;&#x5E76;&#x540E;&#x7684;&#x6700;&#x5927;&#x4E0B;&#x6807; m--;//&#x6700;&#x5927;&#x4E0B;&#x6807; n--; while(n&gt;=0) { if(m&gt;=0 &amp;&amp; nums1[m]&gt;nums2[n]) {//&#x6CE8;&#x610F;&#x5224;&#x65AD;&#x6B21;&#x5E8F;&#xFF0C; &#x9700;&#x8981;&#x5148;&#x5224;&#x65AD;m&#x518D;&#x5224;&#x65AD;&#x6570;&#x7EC4; nums1[p] = nums1[m]; m--; p--; }else { nums1[p] = nums2[n]; n--; p--; } } }} &#x7B80;&#x5316;&#x540E; 123456public void merge(int[] nums1, int m, int[] nums2, int n) { int p = m-- + --n; while(n&gt;=0){ nums1[p--] = m&gt;=0 &amp;&amp; nums1[m]&gt;nums2[n] ? nums1[m--]:nums2[n--]; }} &#x5B57;&#x7B26;&#x4E32;125. &#x9A8C;&#x8BC1;&#x56DE;&#x6587;&#x4E32;https://leetcode-cn.com/problems/valid-palindrome/ &#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x9A8C;&#x8BC1;&#x5B83;&#x662F;&#x5426;&#x662F;&#x56DE;&#x6587;&#x4E32;&#xFF0C;&#x53EA;&#x8003;&#x8651;&#x5B57;&#x6BCD;&#x548C;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#xFF0C;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x5B57;&#x6BCD;&#x7684;&#x5927;&#x5C0F;&#x5199;&#x3002; &#x8BF4;&#x660E;&#xFF1A;&#x672C;&#x9898;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x5B9A;&#x4E49;&#x4E3A;&#x6709;&#x6548;&#x7684;&#x56DE;&#x6587;&#x4E32;&#x3002; &#x793A;&#x4F8B; 1: 12&#x8F93;&#x5165;: &quot;A man, a plan, a canal: Panama&quot;&#x8F93;&#x51FA;: true &#x793A;&#x4F8B; 2: 12&#x8F93;&#x5165;: &quot;race a car&quot;&#x8F93;&#x51FA;: false &#x53CC;&#x6307;&#x9488;&#xFF0C;&#x4E00;&#x4E2A;&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#xFF0C;&#x4E00;&#x4E2A;&#x4ECE;&#x5C3E;&#x5F00;&#x59CB; &#x8981;&#x6C42;&#x4E0D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x628A;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x4E3A;&#x5C0F;&#x5199;&#x4E00;&#x5B9A;&#x8981;&#x533A;&#x5206;&#x597D;if&#x548C;while 1234567891011121314151617181920212223242526272829303132public static boolean isPalindrome(String s) { if (s == null) { return true; } s = s.toLowerCase();// &#x90FD;&#x8F6C;&#x4E3A;&#x5C0F;&#x5199; int i = 0, j = s.length() - 1; while (i &lt; j) { while (!isLawful(s.charAt(i))) { i++; if (i == s.length()) return true;// &#x7A7A;&#x5B57;&#x7B26;&#x4E32; } while (!isLawful(s.charAt(j))) { j--; } //char ichar = s.charAt(i);//debug&#x7528; //char jchar = s.charAt(j); if (s.charAt(i) != s.charAt(j)) return false; i++; j--; } return true;}private static boolean isLawful(char c) { if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos; || c &gt;= &apos;a&apos; &amp;&amp; c &lt;= &apos;z&apos;) { return true; } else { return false; }} 387. &#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x5B57;&#x7B26;https://leetcode-cn.com/problems/first-unique-character-in-a-string/&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x627E;&#x5230;&#x5B83;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x5B83;&#x7684;&#x7D22;&#x5F15;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x8FD4;&#x56DE; -1&#x3002; &#x6848;&#x4F8B;: 12345s = &quot;leetcode&quot;&#x8FD4;&#x56DE; 0.s = &quot;loveleetcode&quot;,&#x8FD4;&#x56DE; 2. &#x65B9;&#x6CD5;&#x4E00; Map&#x5B58;&#x50A8;&#x904D;&#x5386;&#x548C;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x6709;&#x5173;&#x7684;&#xFF0C;&#x4E0D;&#x8981;&#x72B9;&#x8C6B;&#xFF0C;hash &#x6B64;&#x7C7B;&#x6280;&#x672F;&#x65B9;&#x6CD5;&#x5747;&#x53EF;&#x7528;map&#x8BB0;&#x5F55;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x5E76;&#x904D;&#x5386;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x672C;&#x9898;&#x4E2D;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#x904D;&#x5386;&#x65F6;&#x4F7F;&#x7528;&#x539F;&#x5148;&#x6570;&#x7EC4;&#x7684;&#x7D22;&#x5F15;&#x8FDB;&#x884C;&#x904D;&#x5386;&#xFF0C;&#x56E0;&#x4E3A;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x7684;&#x662F;&#x627E;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x7B26;(value=1&#x7684;key) 123456789101112131415public int firstUniqChar(String s) { Map&lt;Character,Integer&gt; map = new HashMap&lt;Character, Integer&gt;(); char[] chars = s.toCharArray(); for(char ch:chars) { if(map.containsKey(ch)) { map.put(ch,map.get(ch)+1); }else { map.put(ch,1); } } for(int i=0;i&lt;s.length();i++) { if(map.get(chars[i]) == 1) return i;//&#x5229;&#x7528;&#x5B57;&#x7B26; &#x4E32;&#x7D22;&#x5F15; } return -1;} &#x65B9;&#x6CD5;&#x4E8C; &#x6876;&#x5B58;&#x50A8;&#x5F53;&#x5168;&#x662F;&#x5B57;&#x6BCD;&#x5B57;&#x7B26;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x7528;&#x5927;&#x5C0F;&#x4E3A;26&#x7684;&#x6574;&#x578B;&#x6570;&#x7EC4;&#x5B58;&#x50A8;&#x6BCF;&#x4E2A;&#x5B57;&#x6BCD;&#x7684;&#x9891;&#x6B21;&#xFF0C;&#x7D22;&#x5F15;&#x4E3A;ch-&apos;a&apos;, &#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A;&#x7B80;&#x5316;&#x7684;Map&#xFF0C;&#x539F;&#x7406;&#x4E0E;Map&#x5B58;&#x50A8;&#x76F8;&#x540C; &#x6B64;&#x5904;&#x8FD8;&#x5E94;&#x6CE8;&#x610F;&#x6570;&#x7EC4;&#x521D;&#x59CB;&#x5316;&#x5927;&#x5C0F;&#x4E4B;&#x540E;&#xFF0C;&#x6574;&#x578B;&#x9ED8;&#x8BA4;&#x503C;&#x5747;&#x4E3A;0 12345678910public int firstUniqChar(String s) { int[] freq = new int[26];//&#x521D;&#x59CB;&#x5316;&#x6570;&#x7EC4;&#x540E;&#x9ED8;&#x8BA4;&#x503C;&#x5747;&#x4E3A;0,&#x503C;&#x4E3A;&#x9891;&#x6B21;&#xFF0C;&#x7D22;&#x5F15;&#x4E3A;ch-&apos;a&apos; for(int i=0;i&lt;s.length();i++) { freq[s.charAt(i)-&apos;a&apos;]++; } for(int i=0;i&lt;s.length();i++) { if(freq[s.charAt(i)-&apos;a&apos;]==1) return i; } return -1;} 344. &#x53CD;&#x8F6C;&#x5B57;&#x7B26;&#x4E32;https://leetcode-cn.com/problems/reverse-string/&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x4F5C;&#x7528;&#x662F;&#x5C06;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x53CD;&#x8F6C;&#x8FC7;&#x6765;&#x3002;&#x8F93;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#x4EE5;&#x5B57;&#x7B26;&#x6570;&#x7EC4; char[] &#x7684;&#x5F62;&#x5F0F;&#x7ED9;&#x51FA;&#x3002; &#x4E0D;&#x8981;&#x7ED9;&#x53E6;&#x5916;&#x7684;&#x6570;&#x7EC4;&#x5206;&#x914D;&#x989D;&#x5916;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x539F;&#x5730;&#x4FEE;&#x6539;&#x8F93;&#x5165;&#x6570;&#x7EC4;&#x3001;&#x4F7F;&#x7528; O(1) &#x7684;&#x989D;&#x5916;&#x7A7A;&#x95F4;&#x89E3;&#x51B3;&#x8FD9;&#x4E00;&#x95EE;&#x9898;&#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x5047;&#x8BBE;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x90FD;&#x662F; ASCII &#x7801;&#x8868;&#x4E2D;&#x7684;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26;&#x3002; &#x793A;&#x4F8B; 1&#xFF1A; 12&#x8F93;&#x5165;&#xFF1A;[&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]&#x8F93;&#x51FA;&#xFF1A;[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;] &#x793A;&#x4F8B; 2&#xFF1A; 12&#x8F93;&#x5165;&#xFF1A;[&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]&#x8F93;&#x51FA;&#xFF1A;[&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;] &#x4E24;&#x4E2A;&#x6307;&#x9488;&#x81EA;&#x589E;&#x81EA;&#x51CF;&#xFF0C;&#x76F8;&#x9047;&#x9000;&#x51FA;&#x5C31;&#x5B8C;&#x4E8B;&#x4E86; 12345678public void reverseString(char[] s) { int i=0,j=s.length-1; while(j&gt;i) { char temp = s[i]; s[i++] = s[j]; s[j--] = temp; }} &#x6570;&#x7EC4;189. &#x65CB;&#x8F6C;&#x6570;&#x7EC4;https://leetcode-cn.com/problems/rotate-array/ &#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x5C06;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x5411;&#x53F3;&#x79FB;&#x52A8; k &#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x5176;&#x4E2D; k &#x662F;&#x975E;&#x8D1F;&#x6570;&#x3002;&#x8981;&#x6C42;&#x4F7F;&#x7528;&#x7A7A;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A; O(1)&#x7684;&#x539F;&#x5730;&#x7B97;&#x6CD5;&#x3002; &#x793A;&#x4F8B; 1: 123456&#x8F93;&#x5165;: [1,2,3,4,5,6,7] &#x548C; k = 3&#x8F93;&#x51FA;: [5,6,7,1,2,3,4]&#x89E3;&#x91CA;:&#x5411;&#x53F3;&#x65CB;&#x8F6C; 1 &#x6B65;: [7,1,2,3,4,5,6]&#x5411;&#x53F3;&#x65CB;&#x8F6C; 2 &#x6B65;: [6,7,1,2,3,4,5]&#x5411;&#x53F3;&#x65CB;&#x8F6C; 3 &#x6B65;: [5,6,7,1,2,3,4] &#x793A;&#x4F8B; 2: 12345&#x8F93;&#x5165;: [-1,-100,3,99] &#x548C; k = 2&#x8F93;&#x51FA;: [3,99,-1,-100]&#x89E3;&#x91CA;:&#x5411;&#x53F3;&#x65CB;&#x8F6C; 1 &#x6B65;: [99,-1,-100,3]&#x5411;&#x53F3;&#x65CB;&#x8F6C; 2 &#x6B65;: [3,99,-1,-100] &#x65B9;&#x6CD5;&#x4E00; &#x66B4;&#x529B;&#x6CD5;&#x7406;&#x6E05;&#x65CB;&#x8F6C;&#x4E00;&#x6B21;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x518D;&#x91CD;&#x590D;k&#x6B21;&#x5373;&#x53EF;&#x3002;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#xFF1A;O(n&#x2217;k) &#x3002;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x88AB;&#x79FB;&#x52A8; 1 &#x6B65;O(n)&#xFF09; k&#x6B21;O(k) &#x6CE8;&#x610F;&#x5728;&#x53D8;&#x6362;&#x65F6;&#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x7B2C;j&#x4F4D;&#x548C;&#x7B2C; j-1 &#x4F4D;&#x7684;&#x6570;&#x503C;&#x8FDB;&#x884C;&#x4EA4;&#x6362;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x4EA4;&#x6362;&#x6570;&#x503C;&#x4E2D;&#x7684;&#x503C;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x5904;&#x9009;&#x53D6;&#x4E86;prev&#x6765;&#x5B58;&#x50A8;&#x7B2C;j-1&#x4F4D;&#x7684;&#x6570;&#x503C;&#x3002; 1234567891011121314151617181920class Solution { public void rotate(int[] nums, int k) { for(int i=0;i&lt;k;i++) { /** * &#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x53D8;&#x6362;&#x4E00;&#x6B21;,&#x5171;&#x53D8;&#x6362;k&#x6B21; */ rotOnce(nums); } } public void rotOnce(int[] nums) { int prev = nums[nums.length-1];//&#x9009;&#x53D6;&#x4E00;&#x4E2A;&#x54E8;&#x5175;&#x53D8;&#x91CF;&#x7528;&#x4E8E;&#x4EA4;&#x6362; for(int j=0;j&lt;nums.length;j++) {//&#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x7B2C;j&#x4F4D;&#x548C;&#x7B2C;j+1&#x4F4D;&#x7684;&#x6570;&#x503C;&#x8FDB;&#x884C;&#x4EA4;&#x6362;&#xFF0C;j&#x9012;&#x589E; int temp = nums[j]; nums[j] = prev; prev = temp;//prev&#x6BCF;&#x6B21;&#x90FD;&#x662F;nums[j]&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x6570;&#x503C; } }} &#x65B9;&#x6CD5;&#x4E8C; &#x73AF;&#x72B6;&#x66FF;&#x6362;&#x672A;&#x770B; 217. &#x5B58;&#x5728;&#x91CD;&#x590D;&#x5143;&#x7D20;https://leetcode-cn.com/problems/contains-duplicate/&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#x6570;&#x7EC4;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5B58;&#x5728;&#x91CD;&#x590D;&#x5143;&#x7D20;&#x3002; &#x5982;&#x679C;&#x4EFB;&#x4F55;&#x503C;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x51FA;&#x73B0;&#x81F3;&#x5C11;&#x4E24;&#x6B21;&#xFF0C;&#x51FD;&#x6570;&#x8FD4;&#x56DE; true&#x3002;&#x5982;&#x679C;&#x6570;&#x7EC4;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x5219;&#x8FD4;&#x56DE; false&#x3002;&#x793A;&#x4F8B; 1: 12&#x8F93;&#x5165;: [1,2,3,1]&#x8F93;&#x51FA;: true &#x793A;&#x4F8B; 2: 12&#x8F93;&#x5165;: [1,2,3,4]&#x8F93;&#x51FA;: false &#x793A;&#x4F8B; 3: 12&#x8F93;&#x5165;: [1,1,1,3,3,4,3,2,4,2]&#x8F93;&#x51FA;: true &#x65B9;&#x6CD5;&#x4E00; Map&#x5B58;&#x50A8;&#x6CD5;&#x521A;&#x5F00;&#x59CB;&#x60F3;&#x7528;&#x6570;&#x7EC4;&#x6876;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x5B58;&#x50A8;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x7684;&#x9891;&#x6B21;&#xFF0C;&#x4F46;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x5C31;&#x5FFD;&#x7565;&#x4E86;&#x8D1F;&#x6570;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x9020;&#x6210;&#x4E86;&#x6570;&#x7EC4;&#x8D8A;&#x754C;&#xFF0C;&#x6545;&#x4ECD;&#x8981;&#x7528;map 12345678910111213/***&#x8003;&#x8651;&#x4E0D;&#x8DB3;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5F03;&#x7528;*/public boolean containsDuplicate(int[] nums) { int[] freq = new int[10];//&#x6CA1;&#x6709;&#x8003;&#x8651;&#x8D1F;&#x6570;&#x7684;&#x60C5;&#x51B5; for(int i=0;i&lt;nums.length;i++) { freq[nums[i]]++; } for(int f:freq) { if(f&gt;1) return true; } return false;} AC&#x4EE3;&#x7801;&#x5982;&#x4E0B;,&#x4E5F;&#x662F;&#x5E38;&#x89C4;map&#xFF0C;&#x548C;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#x6709;&#x5173; 1234567891011121314151617class Solution { public boolean containsDuplicate(int[] nums) { Map&lt;Integer,Integer&gt; map = new HashMap&lt;Integer, Integer&gt;(); for(int num:nums) { if(map.containsKey(num)) { map.put(num,map.get(num)+1); }else { map.put(num, 1); } } for(Integer num:map.keySet()) { if(map.get(num)&gt;1) return true; } return false; }} Boolean&#x6570;&#x7EC4;&#x6CD5;&#x6CA1;&#x770B;&#x61C2;TODO 283. &#x79FB;&#x52A8;&#x96F6;(TODO)https://leetcode-cn.com/problems/move-zeroes/&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4; nums&#xFF0C;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5C06;&#x6240;&#x6709; 0 &#x79FB;&#x52A8;&#x5230;&#x6570;&#x7EC4;&#x7684;&#x672B;&#x5C3E;&#xFF0C;&#x540C;&#x65F6;&#x4FDD;&#x6301;&#x975E;&#x96F6;&#x5143;&#x7D20;&#x7684;&#x76F8;&#x5BF9;&#x987A;&#x5E8F;&#x3002; &#x793A;&#x4F8B;: 12&#x8F93;&#x5165;: [0,1,0,3,12]&#x8F93;&#x51FA;: [1,3,12,0,0] &#x8BF4;&#x660E;: &#x5FC5;&#x987B;&#x5728;&#x539F;&#x6570;&#x7EC4;&#x4E0A;&#x64CD;&#x4F5C;&#xFF0C;&#x4E0D;&#x80FD;&#x62F7;&#x8D1D;&#x989D;&#x5916;&#x7684;&#x6570;&#x7EC4; &#x53C2;&#x8003;&#x522B;&#x4EBA;&#x7684;&#x65B9;&#x6CD5; 12345678910111213141516171819//&#x601D;&#x8DEF;&#xFF1A;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;index&#xFF0C;&#x8868;&#x793A;&#x975E;0&#x6570;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5FAA;&#x73AF;&#x904D;&#x5386;&#x6570;&#x7EC4;&#xFF0C;// &#x5982;&#x679C;&#x4E0D;&#x662F;0&#xFF0C;&#x5C06;&#x975E;0&#x503C;&#x79FB;&#x52A8;&#x5230;&#x7B2C;index&#x4F4D;&#x7F6E;,&#x7136;&#x540E;index + 1//&#x904D;&#x5386;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#xFF0C;index&#x503C;&#x8868;&#x793A;&#x4E3A;&#x975E;0&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x518D;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x4ECE;index&#x4F4D;&#x7F6E;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x6B64;&#x65F6;&#x90FD;&#x5E94;&#x8BE5;&#x4E3A;0public void moveZeroes(int[] nums) { if (nums == null || nums.length &lt;= 1) { return; } int index = 0; for (int i = 0; i &lt; nums.length; i++) { if (nums[i] != 0) { nums[index] = nums[i]; index++; } } for (int i = index; i &lt; nums.length; i++) { nums[i] = 0; }} &#x6700;&#x540E;&#x8865;&#x96F6;&#x7684;&#x64CD;&#x4F5C;&#x5176;&#x5B9E;&#x53EF;&#x4EE5;&#x66FF;&#x4EE3;&#x4E3A; &#x76F4;&#x63A5;&#x4EA4;&#x6362;nums[index]&#x548C;nums[i]&#xFF0C;&#x56E0;&#x4E3A;index&#x6240;&#x7ECF;&#x8FC7;&#x7684;&#x6570;&#x7EC4;&#x503C;&#x90FD;&#x662F;&#x975E;&#x96F6;&#x9879;&#x3002;&#x5982;&#x679C;&#x662F;0&#xFF0C;&#x5219;index&#x6CA1;&#x6709;&#x53D8;&#xFF0C;&#x76F4;&#x63A5;&#x628A;i+1&#x7684;&#x975E;0&#x503C;&#x66FF;&#x6362;&#x8FC7;&#x6765;&#x5373;&#x53EF;&#x3002; &#x4EE3;&#x7801;&#x5982;&#x4E0B; 12345678910111213public void moveZeroes(int[] nums) { int index = 0; for (int i = 0; i &lt; nums.length; i++) { if(nums[i]!=0) { int temp = nums[index]; nums[index] = nums[i]; nums[i] = temp; index++; } }} &#x5806;&#x3001;&#x6808;&#x3001;&#x961F;&#x5217;&#x94FE;&#x8868;&#x54C8;&#x5E0C;&#x4E0E;&#x6620;&#x5C04;&#x6811;&#x6392;&#x5E8F;&#x4E0E;&#x641C;&#x7D22;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x56FE;&#x8BBA;&#x6570;&#x5B66;&#x3001;&#x4F4D;&#x8FD0;&#x7B97;&#x4E2D;&#x7B49;&#x9898;&#x6570;&#x7EC4;&#x5806;&#x3001;&#x6808;&#x3001;&#x961F;&#x5217;&#x94FE;&#x8868;&#x54C8;&#x5E0C;&#x4E0E;&#x6620;&#x5C04;&#x6811;&#x6392;&#x5E8F;&#x4E0E;&#x641C;&#x7D22;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x56FE;&#x8BBA;&#x6570;&#x5B66;&#x3001;&#x4F4D;&#x8FD0;&#x7B97;]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>面试</tag>
        <tag>LeetCode</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TODO:正则表达式，字符串拼接性能，设计购物车，KMP]]></title>
    <url>%2F2019%2F08%2F16%2FTODO%2F</url>
    <content type="text"><![CDATA[&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;https://www.runoob.com/regexp/regexp-tutorial.html &#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x6027;&#x80FD; &amp; StringBuffer&#x4E0E;StringBuilder&#x53C2;&#x8003;&#x535A;&#x5BA2;https://www.cnblogs.com/lojun/articles/9664794.htmlhttps://blog.csdn.net/u014086926/article/details/52069074 &#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x6027;&#x80FD;&#x5728;&#x5927;&#x90E8;&#x5206;&#x60C5;&#x51B5;&#x4E0B; StringBuilder &gt; StringBuffer &gt; String &#x76F8;&#x5F53;&#x4E8E; &#x4E0D;&#x52A0;&#x9501;&gt;&#x52A0;&#x9501;&gt;&#x521B;&#x5EFA;&#x65B0;&#x5BF9;&#x8C61; &#x7528;+&#x7684;&#x65B9;&#x5F0F;&#x6548;&#x7387;&#x6700;&#x5DEE;&#xFF0C;concat&#x7531;&#x4E8E;&#x662F;String&#x5185;&#x90E8;&#x65B9;&#x6CD5;&#xFF0C;&#x6027;&#x80FD;&#x4F18;&#x4E8E;+&#x7684;&#x65B9;&#x5F0F;&#xFF1A;str.concat(&#x201C;new str&#x201D;); &#x5355;&#x7EBF;&#x7A0B;&#x4E0B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4E32;&#x8054;&#x7528;StringBuilder&#x7684;append&#xFF0C;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4E32;&#x8054;&#x7528;StrngBuffer&#x7684;append&#xFF1B; &#x5B57;&#x7B26;&#x4E32;&#x7684;&#x52A0;&#x53F7;&#x201C;+&#x201D; &#x65B9;&#x6CD5;&#xFF0C;&#x867D;&#x7136;&#x7F16;&#x8BD1;&#x5668;&#x5BF9;&#x5176;&#x505A;&#x4E86;&#x4F18;&#x5316;&#xFF0C;&#x4F7F;&#x7528;StringBuilder&#x7684;append&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x8FFD;&#x52A0;&#xFF0C;&#x4F46;&#x662F;&#x6BCF;&#x5FAA;&#x73AF;&#x4E00;&#x6B21;&#x90FD;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;StringBuilder&#x5BF9;&#x8C61;&#xFF0C;&#x4E14;&#x90FD;&#x4F1A;&#x8C03;&#x7528;toString&#x65B9;&#x6CD5;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6240;&#x4EE5;&#x5F00;&#x9500;&#x5F88;&#x5927; &#x5728;&#x7F16;&#x8BD1;&#x9636;&#x6BB5;&#x5C31;&#x80FD;&#x591F;&#x786E;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#xFF0C;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x521B;&#x5EFA;String&#x6216;StringBuffer&#x5BF9;&#x8C61;&#x3002;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#x7684;&#x201D;+&#x201D;&#x8FDE;&#x63A5;&#x64CD;&#x4F5C;&#x6548;&#x7387;&#x6700;&#x9AD8;&#xFF08;&#x5982;&#xFF1A;String str = &#x201C;a&#x201D; + &#x201C;b&#x201D; + &#x201C;c&#x201D;;&#xFF09; &#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF1A; &#x5355;&#x4E2A;String&#x5BF9;&#x8C61;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x5728;&#x7F16;&#x8BD1;&#x9636;&#x6BB5;&#x88AB; JVM &#x89E3;&#x91CA;&#x6210;&#x4E86;StringBuilder&#x867D;&#x7136;&#x4E5F;&#x88AB;&#x5BF9;&#x8C61;&#x7684;&#x62FC;&#x63A5;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E9B;&#x65F6;&#x5019; String &#x5BF9;&#x8C61;&#x7684;&#x901F;&#x5EA6;&#x5E76;&#x4E0D;&#x4F1A;&#x6BD4; StringBuffer &#x5BF9;&#x8C61;&#x6162;&#xFF0C;&#x800C;&#x7279;&#x522B;&#x662F;&#x4EE5;&#x4E0B;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5BF9;&#x8C61;&#x751F;&#x6210;&#x4E2D;&#xFF0C;String &#x6548;&#x7387;&#x662F;&#x8FDC;&#x8981;&#x6BD4; StringBuffer &#x5FEB;&#x7684;&#xFF1A; 12String S1 = &#x201C;This is only a&#x201D; + &#x201C; simple&#x201D; + &#x201C; test&#x201D;;//&#x5FEB;StringBuffer Sb = new StringBuffer(&#x201C;This is only a&#x201D;).append(&#x201C; simple&#x201D;).append(&#x201C; test&#x201D;);//&#x6162; &#x539F;&#x56E0;&#x662F;JVM&#x5C06; 1String S1 = &#x201C;This is only a&#x201D; + &#x201C; simple&#x201D; + &#x201C;test&#x201D;; &#x7B49;&#x540C;&#x4E8E;&#x4E86; 1String S1 = &#x201C;This is only a simple test&#x201D;; &#x6240;&#x4EE5;&#x5F53;&#x7136;&#x4E0D;&#x9700;&#x8981;&#x592A;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x4E86;&#x3002;&#x4F46;&#x5982;&#x679C;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x6765;&#x81EA;&#x53E6;&#x5916;&#x7684; String &#x5BF9;&#x8C61;&#x7684;&#x8BDD;&#xFF0C;&#x901F;&#x5EA6;&#x5C31;&#x6CA1;&#x90A3;&#x4E48;&#x5FEB;&#x4E86;&#xFF0C;&#x8B6C;&#x5982;&#xFF1A; 1234String S2 = &#x201C;This is only a&#x201D;;String S3 = &#x201C; simple&#x201D;;String S4 = &#x201C; test&#x201D;;String S1 = S2 +S3 + S4; &#x8FD9;&#x65F6;&#x5019; JVM &#x4F1A;&#x6309;&#x7167;&#x539F;&#x59CB;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x75AF;&#x72C2;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#x5E76;&#x8FDE;&#x63A5;&#x3002; StringBuffer&#x4E0E;StringBuilder String&#x5BF9;&#x8C61;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x4FEE;&#x6539;String&#x65F6;&#x91CD;&#x65B0;&#x6307;&#x5411;&#x53E6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x975E;&#x5728;&#x539F;&#x5730;&#x5740;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x3002;String&#x88AB;final&#x4FEE;&#x9970;&#xFF0C;&#x4E0D;&#x53EF;&#x7EE7;&#x627F;&#xFF0C;&#x5B9E;&#x4F8B;&#x5316;&#x540E;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x3002;&#x5176;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x4E00;&#x4E2A;final&#x4FEE;&#x9970;&#x7684;&#x5B57;&#x7B26;&#x6570;&#x7EC4;char[]&#x3002;final&#x4FEE;&#x9970;&#x7684;&#x53EB;&#x4E0D;&#x53EF;&#x53D8;&#x7C7B;&#xFF0C;&#x4E00;&#x65E6;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x5C31;&#x4E0D;&#x53EF;&#x53D8;&#x3002;String&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;string&#x5185;&#x90E8;&#x5B58;&#x50A8;&#x5B57;&#x7B26;&#x4E32;&#x7684;char&#x6570;&#x7EC4;&#x4EE5;&#x53CA;&#x548C;char&#x6570;&#x7EC4;&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F;&#x90FD;&#x662F;final&#x7684;&#x3002; StringBuilder&#x867D;&#x7136;&#x4E5F;&#x88AB;final&#x4FEE;&#x9970;&#xFF0C;&#x4F46;&#x5176;&#x5E95;&#x5C42;&#x7684;char&#x6570;&#x7EC4;&#x5E76;&#x975E;final(&#x5B9A;&#x4E49;&#x5728;&#x5176;&#x7236;&#x7C7B;AbstractStringBuilder&#x4E2D;)&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x88AB;&#x4FEE;&#x6539;&#x7684;&#x52A8;&#x6001;&#x6570;&#x7EC4;&#x3002;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#x6CA1;&#x6709;&#x88AB;synchronized&#x4FEE;&#x9970;&#xFF0C;&#x5E76;&#x975E;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x3002; StringBuffer&#x4E5F;&#x88AB;final&#x4FEE;&#x9970;&#xFF0C;&#x4F46;&#x5176;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF0C;&#x56E0;&#x4E3A;&#x91CC;&#x9762;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#x90FD;&#x88AB;synchronized&#x4FEE;&#x9970;&#x3002; KMPhttps://www.cnblogs.com/SYCstudio/p/7194315.html HashMap&#x5185;&#x90E8;&#x7ED3;&#x6784;&#xFF0C;&#x8C03;&#x7528;put&#x65B9;&#x6CD5;&#x65F6;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#xFF0C;&#x7EA2;&#x9ED1;&#x6811;&#x53C2;&#x8003;&#x535A;&#x5BA2; https://www.cnblogs.com/shipengzhi/articles/2087505.html https://www.cnblogs.com/wang-meng/p/9b6c35c4b2ef7e5b398db9211733292d.html https://blog.csdn.net/sinat_37906153/article/details/83004831 https://www.cnblogs.com/yuanblog/p/4441017.html https://blog.csdn.net/u013164931/article/details/81389314 &#x5B58;&#x50A8;&#x5F62;&#x5F0F;&#x5728;HashMap&#x4E2D; &#x5B58;&#x50A8;key-value&#x65F6;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x8BA1;&#x7B97;&#x90FD;&#x662F; &#x57FA;&#x4E8E;Entry&#x4E2D; &#x7684;key&#xFF0C;&#x6CA1;&#x6709;&#x8003;&#x8651;value&#xFF0C;&#x53EF;&#x4EE5;&#x628A; Map &#x96C6;&#x5408;&#x4E2D;&#x7684; value &#x5F53;&#x6210; key &#x7684;&#x9644;&#x5C5E;&#xFF0C;&#x5F53;&#x7CFB;&#x7EDF;&#x51B3;&#x5B9A;&#x4E86; key &#x7684;&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#x4E4B;&#x540E;&#xFF0C;value &#x968F;&#x4E4B;&#x4FDD;&#x5B58;&#x5728;&#x90A3;&#x91CC;&#x5373;&#x53EF;&#x3002;&#x5B58;&#x50A8;&#x5F62;&#x5F0F;&#x4ECD;&#x7136;&#x662F;Entry&lt;key,value&gt;. HashMap&#x7684;&#x89C4;&#x5219; HashMap&#x4E2D;,&#x952E;&#x548C;&#x503C;&#x90FD;&#x53EF;&#x4EE5;&#x4E3A;null(null&#x952E;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;) HashMap &#x7684;&#x521D;&#x59CB;&#x957F;&#x5EA6;&#x4E3A; 16&#xFF0C;&#x4E14;&#x6BCF;&#x6B21;&#x6269;&#x5BB9;&#x90FD;&#x5FC5;&#x987B;&#x4EE5; 2 &#x7684;&#x500D;&#x6570;&#xFF08;2^n&#xFF09;&#x6269;&#x5145;&#xFF0C;&#x8FD9;&#x662F;&#x7531;&#x53D6;&#x6A21;&#x89C4;&#x5219;hashCode &amp; (length - 1)&#x51B3;&#x5B9A;&#x7684;&#x3002; &#x52A0;&#x8F7D;&#x56E0;&#x5B50;&#x9ED8;&#x8BA4;&#x4E3A;0.75&#xFF0C;size&#x8D85;&#x8FC7;capacity&#x7684;0.75 &#x500D;&#x4FBF;2&#x500D;&#x6269;&#x5145;&#x3002; &#x5982;&#x679C;&#x4E24;&#x4E2A;Entry&#x7684;key&#x7684;hashCode()&#x8FD4;&#x56DE;&#x503C;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x5B83;&#x4EEC;&#x7684;&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#x76F8;&#x540C;(&#x56E0;&#x4E3A;&#x53D6;&#x6A21;&#x4E4B;&#x540E;&#x7684;&#x503C;&#x80AF;&#x5B9A;&#x76F8;&#x540C;&#x5566;)&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E24;&#x4E2A;Entry&#x7684;key&#x901A;&#x8FC7;equals&#x6BD4;&#x8F83;&#x8FD4;&#x56DE;true&#xFF0C;&#x65B0;&#x6DFB;&#x52A0; Entry &#x7684; value &#x5C06;&#x8986;&#x76D6;&#x96C6;&#x5408;&#x4E2D;&#x539F;&#x6709; Entry&#x7684; value&#xFF0C;&#x4F46;key&#x4E0D;&#x4F1A;&#x8986;&#x76D6;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E24;&#x4E2A; Entry &#x7684; key &#x901A;&#x8FC7; equals &#x6BD4;&#x8F83;&#x8FD4;&#x56DE; false&#xFF0C;&#x65B0;&#x6DFB;&#x52A0;&#x7684; Entry &#x5C06;&#x6DFB;&#x52A0;&#x5230;Entry &#x94FE;&#x7684;&#x5934;&#x90E8;&#x3002; jdk1.8&#xFF1A;&#x5F53;hash&#x51B2;&#x7A81;&#x5143;&#x7D20;&#x8FBE;&#x5230;8&#x4E2A;&#x540E;&#x5C06;&#x94FE;&#x8868;&#x8F6C;&#x6362;&#x4E3A;&#x7EA2;&#x9ED1;&#x6811;&#xFF0C;&#x5728;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x5C0F;&#x4E8E; 6 &#x65F6;&#x8FD8;&#x539F;&#x6210;&#x94FE;&#x8868; jdk1.8&#xFF1A;&#x5143;&#x7D20;&#x7684;hashCode() &#x5728;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x4E0B;&#x4F4E;&#x4F4D;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x8FD9;&#x5C06;&#x5BFC;&#x81F4;&#x51B2;&#x7A81;&#xFF08;&#x78B0;&#x649E;&#xFF09;&#xFF0C;&#x56E0;&#x6B64; 1.8 &#x4EE5;&#x540E;&#x505A;&#x4E86;&#x4E2A;&#x79FB;&#x4F4D;&#x64CD;&#x4F5C;&#xFF1A;&#x5C06;&#x5143;&#x7D20;&#x7684; hashCode() &#x548C;&#x81EA;&#x5DF1;&#x53F3;&#x79FB; 16 &#x4F4D;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x6C42;&#x5F02;&#x6216;&#x3002;&#x5C06; hashCode &#x7684;&#x9AD8;&#x4F4D;&#x548C;&#x4F4E;&#x4F4D;&#x6DF7;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x964D;&#x4F4E;&#x51B2;&#x7A81;&#x6982;&#x7387;&#x3002;&#x6211;&#x4EEC;&#x5C06; hashCode &#x503C;&#x53F3;&#x79FB; 16 &#x4F4D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x53D6; int &#x7C7B;&#x578B;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x521A;&#x597D;&#x5C06;&#x8BE5;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x5BF9;&#x534A;&#x5207;&#x5F00;&#x3002;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x4F4D;&#x5F02;&#x6216;&#x8FD0;&#x7B97;&#xFF0C;&#x7B80;&#x800C;&#x8A00;&#x4E4B;&#x5C31;&#x662F;&#x5C3D;&#x91CF;&#x6253;&#x4E71;hashCode&#x7684;&#x4F4E;16&#x4F4D;&#xFF0C;&#x56E0;&#x4E3A;&#x771F;&#x6B63;&#x53C2;&#x4E0E;&#x8FD0;&#x7B97;&#x7684;&#x8FD8;&#x662F;&#x4F4E;16&#x4F4D;&#x3002; put&#x65B9;&#x6CD5;&#x5BF9;key&#x53D6;hash&#x8FD0;&#x7B97;&#x540E;&#xFF0C;&#x6240;&#x5F97;hashcode&#x5BF9;&#x6570;&#x7EC4;&#x5927;&#x5C0F;&#x53D6;&#x6A21;&#xFF0C;&#x5F97;&#x5230;&#x5143;&#x7D20;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;(&#x5373;&#x4E0B;&#x6807;)&#xFF0C;&#x82E5;&#x6B64;&#x4F4D;&#x7F6E;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x5176;&#x4ED6;&#x5143;&#x7D20;&#xFF0C;&#x5219;&#x5C06;&#x5143;&#x7D20;&#x63D2;&#x5165;&#x5230;&#x94FE;&#x5934;&#xFF1B;&#x82E5;&#x6CA1;&#x6709;&#x5143;&#x7D20;&#x5219;&#x76F4;&#x63A5;&#x653E;&#x5230;&#x6570;&#x7EC4;&#x8BE5;&#x4F4D;&#x7F6E;&#x4E0A;&#x3002; &#x56E0;&#x4E3A;&#x6709;&#x4E86;&#x53D6;&#x6A21;&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x6240;&#x4EE5;&#x94FE;&#x8868;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x5B58;&#x5728;&#x4E00;&#x8D77;&#x5E76;&#x4E0D;&#x90FD;&#x662F;&#x54C8;&#x5E0C;&#x51B2;&#x7A81;&#x9020;&#x6210;&#x7684;&#x3002; &#x6B64;&#x5904;&#x7684;&#x53D6;&#x6A21;&#x8FD0;&#x7B97;&#x662F;hashCode &amp; (length - 1)&#xFF0C;length&#x4E3A;&#x6570;&#x7EC4;&#x7684;capacity&#x3002;&#x5229;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#x4EE3;&#x66FF;&#x53D6;&#x6A21;&#x8FD0;&#x7B97;&#xFF0C;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x63D0;&#x9AD8;&#x7A0B;&#x5E8F;&#x7684;&#x8BA1;&#x7B97;&#x6548;&#x7387;&#x3002;&#x4F4D;&#x8FD0;&#x7B97;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5BF9;&#x5185;&#x5B58;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x8F6C;&#x6362;&#x6210;&#x5341;&#x8FDB;&#x5236;&#xFF0C;&#x56E0;&#x6B64;&#x6548;&#x7387;&#x8981;&#x9AD8;&#x5F97;&#x591A;&#x3002; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x7279;&#x5B9A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F4D;&#x8FD0;&#x7B97;&#x624D;&#x53EF;&#x4EE5;&#x8F6C;&#x6362;&#x6210;&#x53D6;&#x6A21;&#x8FD0;&#x7B97;&#xFF08;&#x5F53; b = 2^n &#x65F6;&#xFF0C;a % b = a &amp; (b - 1) &#xFF09;&#x3002;&#x4E5F;&#x662F;&#x56E0;&#x6B64;&#xFF0C;HashMap &#x624D;&#x5C06;&#x521D;&#x59CB;&#x957F;&#x5EA6;&#x8BBE;&#x7F6E;&#x4E3A; 16&#xFF0C;&#x4E14;&#x6269;&#x5BB9;&#x53EA;&#x80FD;&#x662F;&#x4EE5; 2 &#x7684;&#x500D;&#x6570;&#xFF08;2^n&#xFF09;&#x6269;&#x5BB9; get&#x65B9;&#x6CD5;&#x4ECE;HashMap&#x4E2D;get&#x5143;&#x7D20;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x8BA1;&#x7B97;key&#x7684;hashCode&#xFF0C;&#x627E;&#x5230;&#x6570;&#x7EC4;&#x4E2D;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x7684;&#x67D0;&#x4E00;&#x5143;&#x7D20;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;key&#x7684;equals&#x65B9;&#x6CD5;&#x5728;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x7684;&#x94FE;&#x8868;&#x4E2D;&#x627E;&#x5230;&#x9700;&#x8981;&#x7684;&#x5143;&#x7D20;&#x3002; &#x9762;&#x8BD5;&#x624B;&#x5199;get&#x4E0E;put&#x65B9;&#x6CD5;ConcurrentHashMapHashSet&#x662F;&#x5982;&#x4F55;&#x4FDD;&#x8BC1;&#x5143;&#x7D20;&#x4E0D;&#x91CD;&#x590D;&#x7684;MySQL&#x4E2D;&#x63D2;&#x5165;&#x4E00;&#x5343;&#x4E07;&#x6761;&#x6570;&#x636E;&#x5982;&#x4F55;&#x662F;&#x5B9E;&#x73B0;&#xFF0C;&#x5728;&#x4E00;&#x4EBF;&#x6761;&#x8D26;&#x53F7;&#x4E2D;&#x67E5;&#x627E;&#x6709;&#x6CA1;&#x6709;&#x4F60;&#x7684;&#x8D26;&#x53F7;&#xFF0C;&#x627E;&#x5230;&#x91CD;&#x590D;&#x7684;&#x8D26;&#x53F7;String&#xFF0C;StringBuffer&#xFF0C;StringBuilder&#x6570;&#x7EC4;(Array)&#x548C;&#x5217;&#x8868;(ArrayList)&#x7684;&#x533A;&#x522B;&#xFF1F;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;Array&#x800C;&#x4E0D;&#x662F;ArrayList&#xFF1F;hashCode&#x4E0E;equalshttps://www.cnblogs.com/yuanblog/p/4441017.html &#x5982;&#x679C;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x76F8;&#x540C;&#xFF0C;&#x5C31;&#x662F;&#x9002;&#x7528;&#x4E8E;equals(java.lang.Object) &#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;hashCode&#x4E00;&#x5B9A;&#x8981;&#x76F8;&#x540C; &#x5982;&#x679C;&#x5BF9;&#x8C61;&#x7684;equals&#x65B9;&#x6CD5;&#x88AB;&#x91CD;&#x5199;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x8C61;&#x7684;hashCode&#x4E5F;&#x5C3D;&#x91CF;&#x91CD;&#x5199;&#xFF0C;&#x5E76;&#x4E14;&#x4EA7;&#x751F;hashCode&#x4F7F;&#x7528;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x548C;equals&#x65B9;&#x6CD5;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x4E00;&#x81F4;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x4F1A;&#x8FDD;&#x53CD;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x7B2C;2&#x70B9; &#x8FED;&#x4EE3;&#x5668;&#xFF0C;&#x679A;&#x4E3E;HashMap, HashTable, ConcurrentHashMap&#x7EBF;&#x7A0B;&#x6C60;&#x4E50;&#x89C2;&#x9501;&#x4E0E;&#x60B2;&#x89C2;&#x9501;&#x8BFB;&#x5199;&#x9501;&#x7684;&#x4F18;&#x5148;&#x7EA7;JVM&#x6709;&#x4E09;&#x4E2A;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x6DF7;&#x6DC6;&#x7684;&#x6982;&#x5FF5;&#xFF1A; Java&#x5185;&#x5B58;&#x6A21;&#x578B;&#xFF08;Java Memory Model&#xFF08;JMM&#xFF09;&#xFF09;JVM&#x5185;&#x5B58;&#x7ED3;&#x6784;&#xFF08;JVM&#x5185;&#x5B58;&#x5206;&#x533A;&#xFF09;Java&#x5BF9;&#x8C61;&#x7ED3;&#x6784; GCNIO&#xFF0C;AIO&#xFF0C;BIO,&#x591A;&#x8DEF;&#x590D;&#x7528;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#xFF0C;&#x56DB;&#x6B21;&#x6325;&#x624B;&#x6B7B;&#x9501;&#x4E0E;&#x89E3;&#x9501;Redishttp://www.runoob.com/redis/redis-tutorial.html &#x6570;&#x636E;&#x5E93;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x7D22;&#x5F15;transient&#x4E0E;&#x5E8F;&#x5217;&#x5316;&#x53CD;&#x5C04;&#x62E6;&#x622A;&#x5668;&#x548C;&#x8FC7;&#x6EE4;&#x5668;&#x7EA2;&#x9ED1;&#x6811; b&#x6811; b+&#x6811; &#x533A;&#x522B;cpu&#x5BC6;&#x96C6;&#x578B; io&#x5BC6;&#x96C6;&#x578B;&#x7EBF;&#x7A0B;&#x6C60;&#x8BBE;&#x8BA1;(&#x5F88;&#x8BE6;&#x7EC6;)&#x94FE;&#x8868;&#x6309;&#x6BB5;&#x7FFB;&#x8F6C;http https&#x4E00;&#x6B21;&#x5B8C;&#x6574;http&#x6D41;&#x7A0B;&#xFF1A;&#x4ECE;&#x8F93;&#x5165;&#x7F51;&#x5740;&#x5230;&#x663E;&#x793A;&#x7F51;&#x9875;&#x53C2;&#x8003;&#x535A;&#x5BA2;http://www.mamicode.com/info-detail-1792965.htmlhttps://www.cnblogs.com/xuzekun/p/7527736.htmlhttps://blog.51cto.com/linux5588/1351007 &#x4E00;&#x6B21;http&#x8BF7;&#x6C42;&#x8FC7;&#x7A0B;&#x6982;&#x89C8; &#x5BF9;URL&#x8FDB;&#x884C;DNS&#x57DF;&#x540D;&#x89E3;&#x6790;&#xFF0C;&#x89E3;&#x6790;&#x5230;&#x5BF9;&#x5E94;&#x7684;IP&#x5730;&#x5740;&#xFF1B; client&#x6839;&#x636E;ip&#x5730;&#x5740;&#xFF0C;&#x5411;&#x5BF9;&#x5E94;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x8D77;tcp&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x8FDE;&#x63A5;&#xFF1B; &#x5EFA;&#x7ACB;tcp&#x8FDE;&#x63A5;&#x540E;&#xFF0C;client&#x53D1;&#x8D77;http&#x8BF7;&#x6C42;&#xFF1B; &#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;http&#x8BF7;&#x6C42;(&#x8FD4;&#x56DE;&#x72B6;&#x6001;&#x7801;)&#xFF0C;client&#x83B7;&#x53D6;&#x5230;html&#x4EE3;&#x7801;&#xFF1B; client&#x89E3;&#x6790;index.html&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x8BF7;&#x6C42;html&#x4E2D;&#x7684;&#x8D44;&#x6E90;(js&#xFF0C;css&#x7B49;)&#xFF1B; &#x6D4F;&#x89C8;&#x5668;&#x6E32;&#x67D3;&#x9875;&#x9762;&#x5E76;&#x663E;&#x793A;&#x3002; &#x5177;&#x4F53;&#x7EC6;&#x8282;1&#x3001;&#x57DF;&#x540D;&#x89E3;&#x6790;&#x2460; &#x6D4F;&#x89C8;&#x5668;&#x9996;&#x5148;&#x641C;&#x7D22;&#x6D4F;&#x89C8;&#x5668;&#x81EA;&#x8EAB;&#x7684;DNS&#x7F13;&#x5B58;&#xFF08;&#x7F13;&#x5B58;&#x65F6;&#x95F4;&#x6BD4;&#x8F83;&#x77ED;&#xFF0C;&#x5927;&#x6982;&#x53EA;&#x6709;1&#x5206;&#x949F;&#xFF0C;&#x4E14;&#x53EA;&#x80FD;&#x5BB9;&#x7EB3;1000&#x6761;&#x7F13;&#x5B58;&#xFF09;&#xFF0C;&#x770B;&#x81EA;&#x8EAB;&#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x662F;&#x5426;&#x6709;URL&#x5BF9;&#x5E94;&#x7684;&#x6761;&#x76EE;&#xFF0C;&#x800C;&#x4E14;&#x6CA1;&#x6709;&#x8FC7;&#x671F;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4E14;&#x6CA1;&#x6709;&#x8FC7;&#x671F;&#x5219;&#x89E3;&#x6790;&#x5230;&#x6B64;&#x7ED3;&#x675F;&#xFF1B;&#x2461; &#x82E5;&#x672A;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x641C;&#x7D22;&#x7CFB;&#x7EDF;&#x7684;DNS&#x7F13;&#x5B58;&#xFF1B;&#x2462; &#x82E5;&#x4ECD;&#x672A;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x68C0;&#x67E5;&#x672C;&#x5730;host&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5B58;&#x5728;&#x8BE5;&#x7F51;&#x5740;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x2463; &#x5982;&#x679C;&#x90FD;&#x6CA1;&#x6709;&#x5219;&#x9012;&#x5F52;&#x5730;&#x53BB;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x53BB;&#x67E5;&#x627E;&#xFF0C;&#x5982;&#x4E0B;&#x56FE; 2&#x3001;&#x5EFA;&#x7ACB;TCP&#x8FDE;&#x63A5;&#xFF0C;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x83B7;&#x53D6;&#x5230;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x7684;ip&#x5730;&#x5740;&#x4E4B;&#x540E;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x4EE5;&#x67D0;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x7AEF;&#x53E3;&#x5411;&#x670D;&#x52A1;&#x5668;WEB&#x7A0B;&#x5E8F;&#x7684;80&#x7AEF;&#x53E3;&#x53D1;&#x8D77;TCP&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x3002;&#x8BE6;&#x89C1;TCP&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x4E0E;&#x56DB;&#x6B21;&#x6325;&#x624B; 3&#x3001;&#x53D1;&#x8D77;http&#x8BF7;&#x6C42;HTTP&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x5305;&#x62EC;&#x4E09;&#x90E8;&#x5206;&#xFF1A;&#x8BF7;&#x6C42;&#x884C;&#xFF0C;&#x8BF7;&#x6C42;&#x5934;&#x548C;&#x8BF7;&#x6C42;&#x6B63;&#x6587; &#x3010;&#x8BF7;&#x6C42;&#x884C;&#x3011;&#x8BF7;&#x6C42;&#x65B9;&#x6CD5; &#x7A7A;&#x683C; &#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#x5730;&#x5740;(URI&#x3001;&#x65E0;&#x57DF;&#x540D;) &#x7A7A;&#x683C; HTTP&#x7248;&#x672C; &#x7A7A;&#x683C; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x8BF7;&#x6C42;&#x5934;&#x3011;&#x6807;&#x8BC6;:&#x5185;&#x5BB9; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x7A7A;&#x4E00;&#x884C;&#x3011;(&#x8868;&#x793A;&#x8BF7;&#x6C42;&#x5934;&#x7ED3;&#x675F;) &#x3010;&#x8BF7;&#x6C42;&#x4E3B;&#x4F53;&#x3011;&#xFF08;&#x5373;&#x8BF7;&#x6C42;&#x6B63;&#x6587;&#xFF0C;&#x7528;&#x6237;&#x7684;&#x4E3B;&#x8981;&#x6570;&#x636E;&#x3002;POST&#x65B9;&#x5F0F;&#x65F6;&#x4F7F;&#x7528;&#xFF0C;GET&#x65E0;&#x8BF7;&#x6C42;&#x4E3B;&#x4F53;&#x3002;GET&#x65B9;&#x5F0F;&#x662F;&#x4FDD;&#x5B58;&#x5728;url&#x5730;&#x5740;&#x540E;&#x9762;&#xFF0C;&#x4E0D;&#x4F1A;&#x653E;&#x5230;&#x8FD9;&#x91CC;&#xFF09; get&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x4E3E;&#x4F8B; 12345678GET /java/ HTTP/1.0 (&#x8BF7;&#x6C42;&#x884C;)referer: https://jc-yang.github.io/ (&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF7;&#x6C42;&#x5934;&#x54E6;)sec-fetch-mode: navigate sec-fetch-site: none sec-fetch-user: ?1 upgrade-insecure-requests: 1 user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36 (&#x7A7A;&#x884C;&#xFF0C;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x8BF7;&#x6C42;&#x5934;&#x7ED3;&#x675F;) post&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x4E3E;&#x4F8B; 12345678910111213141516POST http://oa.funds.com.cn:9080/ HTTP/1.1 (&#x8BF7;&#x6C42;&#x884C;)Accept: */* (&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF7;&#x6C42;&#x5934;&#x54E6;)Referer: http://oa.funds.com.cn:9080/DMFramework/Accept-Language: zh-CNUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727;)Content-Type: multipart/form-data; boundary=---------------------------7e21361611db0Accept-Encoding: gzip, deflateHost: oa.funds.com.cn:9080Content-Length: 14623Connection: Keep-Alive (&#x7A7A;&#x884C;&#xFF0C;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x8BF7;&#x6C42;&#x5934;&#x7ED3;&#x675F;)-----------------------------7e21361611db0 (&#x4EE5;&#x4E0B;&#x4E3A;&#x8BF7;&#x6C42;&#x6B63;&#x6587;)Content-Disposition: form-data; name=&quot;nameAttachMentIDs&quot;-----------------------------7e21361611db0 &#x8BF7;&#x6C42;&#x5934; Connection&#xFF0C;Connection&#x8BBE;&#x7F6E;&#x4E3A;keep-alive&#x7528;&#x4E8E;&#x8BF4;&#x660E;&#x5BA2;&#x6237;&#x7AEF;&#x8FD9;&#x8FB9;&#x8BBE;&#x7F6E;&#x7684;&#x662F;&#xFF0C;&#x672C;&#x6B21;HTTP&#x8BF7;&#x6C42;&#x4E4B;&#x540E;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x95ED;TCP&#x8FDE;&#x63A5;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4F7F;&#x4E0B;&#x6B21;HTTP&#x8BF7;&#x6C42;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;TCP&#x901A;&#x9053;&#xFF0C;&#x8282;&#x7701;TCP&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x7684;&#x65F6;&#x95F4; 4&#x3001;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;http&#x8BF7;&#x6C42;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x83B7;&#x5F97;html&#x4EE3;&#x7801;HTTP&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x4E5F;&#x5305;&#x62EC;&#x4E09;&#x90E8;&#x5206;&#xFF1A; &#x54CD;&#x5E94;&#x884C;&#xFF0C;&#x54CD;&#x5E94;&#x5934;&#xFF0C;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;(&#x4E5F;&#x53EF;&#x4EE5;&#x53EB; &#x72B6;&#x6001;&#x884C;&#xFF0C;&#x6D88;&#x606F;&#x62A5;&#x5934;&#xFF0C;&#x54CD;&#x5E94;&#x6B63;&#x6587;) &#x3010;&#x72B6;&#x6001;&#x884C;&#x3011;HTTP&#x7248;&#x672C; &#x7A7A;&#x683C; &#x72B6;&#x6001;&#x7801; &#x7A7A;&#x683C; &#x72B6;&#x6001;&#x7801;&#x63CF;&#x8FF0; &#x7A7A;&#x683C; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x5934;&#x3011;&#x6807;&#x8BC6;:&#x5185;&#x5BB9; CRLF(&#x6362;&#x884C;&#x7B26;) &#x3010;&#x7A7A;&#x4E00;&#x884C;&#x3011;(&#x8868;&#x793A;&#x54CD;&#x5E94;&#x5934;&#x7ED3;&#x675F;) &#x3010;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;&#x3011;(&#x6240;&#x8C13;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;&#xFF0C;&#x5C31;&#x662F;&#x670D;&#x52A1;&#x5668;&#x8FD4;&#x56DE;&#x7684;&#x8D44;&#x6E90;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5373;&#x6574;&#x4E2A;HTML&#x6587;&#x4EF6;) post&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x4E3E;&#x4F8B; 12345678910111213HTTP/1.1 200 OK (&#x72B6;&#x6001;&#x884C;)Content-Type: text/html;charset=GBK (&#x4EE5;&#x4E0B;&#x4E3A;&#x54CD;&#x5E94;&#x5934;&#x54E6;)Content-Language: zh-CNDate: Tue, 03 Apr 2018 05:59:10 GMTServer: WebSphere Application Server/6.1Content-Length: 137214 (&#x7A7A;&#x884C;&#xFF0C;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x54CD;&#x5E94;&#x5934;&#x7ED3;&#x675F;) (&#x4EE5;&#x4E0B;&#x4E3A;&#x54CD;&#x5E94;&#x4E3B;&#x4F53;&#xFF0C;&#x5373;HTML)&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt; get&#x54CD;&#x5E94;&#x62A5;&#x6587;&#x4E0E;post&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x7ED3;&#x679C;&#x57FA;&#x672C;&#x76F8;&#x540C;&#xFF0C;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002; &#x670D;&#x52A1;&#x5668;&#x7AEF;&#x63A5;&#x6536;&#x5230;http&#x8BF7;&#x6C42;&#x540E;&#x5982;&#x4F55;&#x751F;&#x6210;html&#x6587;&#x4EF6;&#x6B64;&#x5904;&#x4E5F;&#x4E0D;&#x8D58;&#x8FF0; &#x5E38;&#x89C1;&#x72B6;&#x6001;&#x7801;&#x53CA;&#x5176;&#x63CF;&#x8FF0; 1xx&#xFF1A;&#x3000;&#x3000;&#x6307;&#x793A;&#x4FE1;&#x606F;&#x2014;&#x2014;&#x8868;&#x793A;&#x8BF7;&#x6C42;&#x5DF2;&#x63A5;&#x6536;&#xFF0C;&#x7EE7;&#x7EED;&#x5904;&#x7406;2xx&#xFF1A;&#x3000;&#x3000;&#x6210;&#x529F;&#x2014;&#x2014;&#x8868;&#x793A;&#x8BF7;&#x6C42;&#x5DF2;&#x88AB;&#x6210;&#x529F;&#x63A5;&#x6536;&#x3001;&#x7406;&#x89E3;&#x3001;&#x63A5;&#x53D7;3xx&#xFF1A;&#x3000;&#x3000;&#x91CD;&#x5B9A;&#x5411;&#x2014;&#x2014;&#x8981;&#x5B8C;&#x6210;&#x8BF7;&#x6C42;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x66F4;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x64CD;&#x4F5C;4xx&#xFF1A;&#x3000;&#x3000;&#x5BA2;&#x6237;&#x7AEF;&#x9519;&#x8BEF;&#x2014;&#x2014;&#x8BF7;&#x6C42;&#x6709;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#x6216;&#x8BF7;&#x6C42;&#x65E0;&#x6CD5;&#x5B9E;&#x73B0;5xx&#xFF1A;&#x3000;&#x3000;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x9519;&#x8BEF;&#x2014;&#x2014;&#x670D;&#x52A1;&#x5668;&#x672A;&#x80FD;&#x5B9E;&#x73B0;&#x5408;&#x6CD5;&#x7684;&#x8BF7;&#x6C42; 200 OK &#xFF1A; &#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x6210;&#x529F;400 Bad Request&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x65E0;&#x6CD5;&#x89E3;&#x6790;401 Unauthorized&#xFF1A;&#x8BF7;&#x6C42;&#x672A;&#x7ECF;&#x6388;&#x6743;403 Forbidden&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x62D2;&#x7EDD;&#x670D;&#x52A1;404 Not Found&#xFF1A;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5E38;&#x89C1;URL&#x9519;&#x8BEF;500 Internal Server Error&#xFF1A;&#x670D;&#x52A1;&#x7AEF;&#x4E0D;&#x53EF;&#x9884;&#x671F;&#x9519;&#x8BEF;503 Server Unavailable&#xFF1A;&#x670D;&#x52A1;&#x5668;&#x5F53;&#x524D;&#x4E0D;&#x80FD;&#x5904;&#x7406;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42; 5&#x3001;&#x6D4F;&#x89C8;&#x5668;&#x89E3;&#x6790;html&#xFF0C;&#x8BF7;&#x6C42;html&#x4E2D;&#x7684;&#x8D44;&#x6E90;&#x6D4F;&#x89C8;&#x5668;&#x62FF;&#x5230;index.html&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x5C31;&#x5F00;&#x59CB;&#x89E3;&#x6790;&#x5176;&#x4E2D;&#x7684;html&#x4EE3;&#x7801;&#xFF0C;&#x9047;&#x5230;js/css/image&#x7B49;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x65F6;&#xFF0C;&#x5C31;&#x5411;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53BB;&#x8BF7;&#x6C42;&#x4E0B;&#x8F7D;&#xFF08;&#x4F1A;&#x4F7F;&#x7528;&#x591A;&#x7EBF;&#x7A0B;&#x4E0B;&#x8F7D;&#xFF0C;&#x6BCF;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x7EBF;&#x7A0B;&#x6570;&#x4E0D;&#x4E00;&#x6837;&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x7528;&#x4E0A;keep-alive&#x7279;&#x6027;&#x4E86;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E00;&#x6B21;HTTP&#x8FDE;&#x63A5;&#xFF0C;&#x53EF;&#x4EE5;&#x8BF7;&#x6C42;&#x591A;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C;&#x4E0B;&#x8F7D;&#x8D44;&#x6E90;&#x7684;&#x987A;&#x5E8F;&#x5C31;&#x662F;&#x6309;&#x7167;&#x4EE3;&#x7801;&#x91CC;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x6BCF;&#x4E2A;&#x8D44;&#x6E90;&#x5927;&#x5C0F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x800C;&#x6D4F;&#x89C8;&#x5668;&#x53C8;&#x591A;&#x7EBF;&#x7A0B;&#x8BF7;&#x6C42;&#x8BF7;&#x6C42;&#x8D44;&#x6E90;&#xFF0C;&#x6240;&#x4EE5;&#x4ECE;&#x4E0B;&#x56FE;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x91CC;&#x663E;&#x793A;&#x7684;&#x987A;&#x5E8F;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x4EE3;&#x7801;&#x91CC;&#x9762;&#x7684;&#x987A;&#x5E8F;&#x3002; 6&#x3001;&#x6D4F;&#x89C8;&#x5668;&#x6E32;&#x67D3;&#x9875;&#x9762;&#xFF0C;&#x663E;&#x793A;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x6CA1;&#x6709;&#x5B8C;&#x6574;&#x63A5;&#x53D7;&#x5168;&#x90E8;HTML&#x6587;&#x6863;&#x65F6;&#xFF0C;&#x5B83;&#x5C31;&#x5DF2;&#x7ECF;&#x5F00;&#x59CB;&#x663E;&#x793A;&#x8FD9;&#x4E2A;&#x9875;&#x9762;&#x4E86;&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4F55;&#x6E32;&#x67D3;&#x6D89;&#x53CA;&#x5230;&#x524D;&#x7AEF;&#x548C;&#x6D4F;&#x89C8;&#x5668;&#x5185;&#x5BB9;&#xFF0C;&#x6B64;&#x5904;&#x4E0D;&#x8D58;&#x8FF0;&#x3002; &#x7EBF;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;,&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x7EBF;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x6B64;&#x5904;&#x53C2;&#x8003;&#x4E66;&#x7C4D;&#x300A;Java&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x7684;&#x827A;&#x672F;&#x300B;Page 22 &#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x5305;&#x62EC;&#x4E86;&#x5806;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x5B9E;&#x4F8B;&#x57DF;&#xFF0C;&#x9759;&#x6001;&#x57DF;&#x548C;&#x6570;&#x7EC4;&#x5143;&#x7D20;&#xFF0C;&#x5806;&#x5185;&#x5B58;&#x5728;&#x7EBF;&#x7A0B;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x3002; &#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x65B9;&#x6CD5;&#x5B9A;&#x4E49;&#x53C2;&#x6570;&#xFF0C;&#x5F02;&#x5E38;&#x5904;&#x7406;&#x53C2;&#x6570;&#x4E0D;&#x5728;&#x7EBF;&#x7A0B;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#xFF0C; &#x4E0D;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x53EF;&#x89C1;&#x6027;&#xFF0C;&#x4E5F;&#x4E0D;&#x53D7;&#x5185;&#x5B58;&#x6A21;&#x578B;&#x5F71;&#x54CD;&#x3002; &#x7EBF;&#x7A0B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x7531;Java&#x5185;&#x5B58;&#x6A21;&#x578B;JMM&#x63A7;&#x5236;&#xFF0C;&#x7EBF;&#x7A0B;&#x95F4;&#x7684;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x5B58;&#x50A8;&#x5728;&#x4E3B;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x79C1;&#x6709;&#x7684;&#x672C;&#x5730;&#x5185;&#x5B58;&#xFF0C;&#x672C;&#x6B21;&#x5185;&#x5B58;&#x4E2D;&#x5B58;&#x50A8;&#x8BE5;&#x7EBF;&#x7A0B;&#x7528;&#x4E8E;&#x8BFB;/&#x5199;&#x7684;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x7684;&#x526F;&#x672C;&#x3002;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x7684;&#x672C;&#x5730;&#x5185;&#x5B58;&#x3002;&#x672C;&#x5730;&#x5185;&#x5B58;&#x662F;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#xFF0C;&#x5E76;&#x4E0D;&#x771F;&#x5B9E;&#x5B58;&#x5728;&#x3002;&#x5B83;&#x6DB5;&#x76D6;&#x4E86;&#x7F13;&#x5B58;&#x3001;&#x5199;&#x7F13;&#x51B2;&#x533A;&#x3001;&#x5BC4;&#x5B58;&#x5668;&#x4EE5;&#x53CA;&#x786C;&#x4EF6;&#x548C;&#x7F16;&#x8BD1;&#x5668;&#x4F18;&#x5316;&#x3002; &#x7EBF;&#x7A0B;A&#x3001;B&#x4E4B;&#x95F4;&#x901A;&#x8BAF;&#x5FC5;&#x987B;&#x7ECF;&#x8FC7;&#x4E24;&#x4E2A;&#x6B65;&#x9AA4;&#x2460; &#x7EBF;&#x7A0B;A&#x628A;&#x672C;&#x5730;&#x5185;&#x5B58;A&#x4E2D;&#x66F4;&#x65B0;&#x8FC7;&#x7684;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x5237;&#x65B0;&#x5230;&#x4E3B;&#x5185;&#x5B58;&#xFF1B;&#x2461; &#x7EBF;&#x7A0B;B&#x5230;&#x4E3B;&#x5185;&#x5B58;&#x4E2D;&#x8BFB;&#x53D6;&#x7EBF;&#x7A0B;A&#x4E4B;&#x524D;&#x66F4;&#x65B0;&#x8FC7;&#x7684;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x3002; &#x624B;&#x5199;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;spring bean&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[漏掉的筷子长度(只出现一次的数字)]]></title>
    <url>%2F2019%2F08%2F16%2FHuawei%2F</url>
    <content type="text"><![CDATA[&#x6628;&#x5929;&#x534E;&#x4E3A;&#x7684;&#x4E00;&#x9762;&#x9898;&#x76EE;&#xFF0C;&#x6CA1;&#x60F3;&#x5230;&#x7ADF;&#x7136;&#x6302;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#x7684;&#x9898;&#x76EE;&#x4E0A;&#xFF1A; &#x5C0F;&#x660E;&#x662F;&#x4E2A;&#x9A6C;&#x5927;&#x54C8;&#xFF0C;&#x67D0;&#x5929;&#x4ED6;&#x5230;&#x8D85;&#x5E02;&#x4E70;&#x4E86;&#x82E5;&#x5E72;&#x53CC;&#x7B77;&#x5B50;&#xFF08;n &lt; 20&#xFF09;&#xFF0C;&#x7B77;&#x5B50;&#x7684;&#x957F;&#x5EA6;&#x4E0D;&#x5C3D;&#x76F8;&#x540C;&#xFF0C;&#x4ED6;&#x628A;&#x5168;&#x90E8;&#x7B77;&#x5B50;&#x90FD;&#x653E;&#x5728;&#x8D2D;&#x7269;&#x888B;&#x91CC;&#x9762;&#x62FF;&#x56DE;&#x5BB6;&#xFF0C;&#x8DEF;&#x4E0A;&#x4E0D;&#x5C0F;&#x5FC3;&#x6F0F;&#x4E86;&#x4E00;&#x6839;&#xFF0C;&#x8BF7;&#x4F60;&#x7528;&#x7A0B;&#x5E8F;&#x5E2E;&#x4ED6;&#x627E;&#x51FA;&#x662F;&#x6F0F;&#x6389;&#x7684;&#x7B77;&#x5B50;&#x662F;&#x591A;&#x957F;&#x7684;&#x3002; &#x9898;&#x76EE;&#x770B;&#x4E86;&#x534A;&#x5929;&#xFF0C;&#x641E;&#x4E0D;&#x61C2;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x5E94;&#x8BE5;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x95EE;&#x9762;&#x8BD5;&#x5B98;&#x8F93;&#x5165;&#x53EA;&#x662F;&#x4E00;&#x4E2A;n&#x5417;&#xFF0C;&#x56DE;&#x7B54;&#x8BF4;&#x5BF9;&#x7684;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x7ED9;&#x7B77;&#x5B50;&#x7F16;&#x53F7;&#xFF08;wtf &#xFF1F;&#xFF1F;&#xFF09;&#xFF0C; &#x786C;&#x7740;&#x5934;&#x76AE;&#x7528;n&#x65B0;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x7A7A;&#x6570;&#x7EC4;&#xFF0C;&#x7136;&#x540E;&#x66B4;&#x529B;&#x5FAA;&#x73AF;&#x4E86;&#x4E24;&#x904D;&#x627E;&#x91CC;&#x9762;&#x5355;&#x4E2A;&#x7684;&#x503C;&#x3002;&#x505A;&#x5B8C;&#x540E;&#x5FC3;&#x91CC;&#x60F3;&#xFF0C;&#x65E2;&#x7136;&#x5DF2;&#x7ECF;&#x77E5;&#x9053;&#x4E86;&#x6570;&#x7EC4;&#x4E2D;&#x6BCF;&#x4E2A;&#x7B77;&#x5B50;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x90A3;&#x6211;&#x4E0D;&#x5C31;&#x5DF2;&#x7ECF;&#x77E5;&#x9053;&#x662F;&#x6389;&#x4E86;&#x62FF;&#x4E00;&#x6839;&#x4E86;&#x561B;&#xFF08;&#x771F;&#x662F;&#x60F3;&#x592A;&#x591A;&#x3002;&#x3002;&#xFF09;&#x9762;&#x8BD5;&#x5B98;&#x770B;&#x4E86;&#x540E;&#x8BF4;&#x6211;&#x7684;&#x65F6;&#x95F4; &#x590D;&#x6742;&#x5EA6;&#x592A;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x6362;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x7136;&#x540E;&#x6211;&#x5C31;&#x60F3;&#x5230;&#x4E86;&#x952E;&#x503C;&#x5BF9;&#x7684;Map&#xFF0C; &#x9762;&#x8BD5;&#x5B98;&#x8BF4;&#x4F60;&#x7167;&#x7740;&#x8FD9;&#x4E2A;&#x601D;&#x8DEF;&#x5199;&#x4E00;&#x4E0B;&#xFF0C;&#x7EE7;&#x7EED;&#x505A;&#x7684;&#x65F6;&#x5019;&#x53C8;&#x9677;&#x5165;&#x4E86;&#x600E;&#x4E48;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x7684;&#x602A;&#x5708;&#x3002;&#x3002;&#x3002; &#x603B;&#x4F53;&#x6765;&#x8BF4;&#x9762;&#x8BD5;&#x4F53;&#x9A8C;&#x5F88;&#x5DEE;&#xFF0C;&#x4E00;&#x662F;&#x9898;&#x76EE;&#x6CA1;&#x6709;&#x660E;&#x786E;&#x8F93;&#x5165;&#x4E0E;&#x8F93;&#x51FA;&#x5E94;&#x8BE5;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x6700;&#x8D77;&#x7801;&#x6709;&#x4E2A;&#x6848;&#x4F8B;&#x4E5F;&#x884C;&#x554A;&#x3002;&#x4E8C;&#x662F;&#x6211;&#x7ECF;&#x9A8C;&#x4E0D;&#x8DB3;&#xFF0C;&#x601D;&#x8003;&#x4E0D;&#x591F;&#x5168;&#x9762;&#xFF0C;&#x88AB;&#x4E00;&#x9053;&#x9898;&#x5361;&#x5728;&#x8F93;&#x5165;&#x548C;&#x6570;&#x636E;&#x521D;&#x59CB;&#x5316;&#x4E0A;&#x4E0D;&#x77E5;&#x9053;&#x662F;&#x6211;&#x7684;&#x95EE;&#x9898;&#x8FD8;&#x662F;&#x6211;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x54CE;&#x4E0D;&#x8BF4;&#x4E86;&#xFF0C;&#x89E3;&#x9898;&#xFF01; &#x4ECA;&#x5929;&#x4E00;&#x8D77;&#x5B9E;&#x4E60;&#x7684;&#x5C0F;&#x4F19;&#x4F34;&#x544A;&#x8BC9;&#x6211;&#x8BF4;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x7C7B;&#x4F3C;&#x627E;&#x91CD;&#x590D;&#x6216;&#x8005;&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x6570;&#xFF0C;&#x5F02;&#x6216;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x3002;&#x4E0A;&#x7F51;&#x627E;&#x4E86;&#x4E00;&#x4E0B;&#x9898;&#x76EE;&#xFF0C;&#x679C;&#x7136;&#x6709;&#x660E;&#x786E;&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;(&#x6211;&#x54ED;&#x4E86;&#xFF0C;&#x6709;&#x8FD9;&#x4E24;&#x53E5;&#x8BDD;&#x6211;&#x65E9;&#x5C31;&#x5199;&#x51FA;&#x6765;&#x4E86;&#x3002;&#x3002;&#x3002;)&#xFF1A; &#x8F93;&#x5165;&#xFF1A; &#x5269;&#x4E0B;&#x7684;&#x7B77;&#x5B50;&#x6570;&#x7EC4;&#xFF0C;&#x5982;&#xFF1A;1, 2, 3, 2, 1, 3, 2&#x8FD4;&#x56DE;&#x503C;&#xFF1A;&#x6F0F;&#x6389;&#x7684;&#x7B77;&#x5B50;&#x957F;&#x5EA6;&#xFF0C;&#x5982;&#x4E0A;&#x8FF0;&#x8F93;&#x5165;&#x8FD4;&#x56DE;&#xFF1A;2&#xFF08;&#x5F53;&#x8F93;&#x5165;&#x7684;&#x7B77;&#x5B50;&#x6570;&#x636E;&#x5F02;&#x5E38;&#x65F6;&#x8FD4;&#x56DE;-1&#xFF0C;&#x5982;&#xFF1A;&#x627E;&#x4E0D;&#x5230;&#x6F0F;&#x6389;&#x7684;&#x7B77;&#x5B50;&#xFF09; &#x66B4;&#x529B;&#x6CD5;&#x4E5F;&#x5C31;&#x662F;&#x6211;&#x5728;&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x7B54;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5FAA;&#x73AF;&#x4E24;&#x904D;&#x67E5;&#x627E;&#x6709;&#x65E0;&#x91CD;&#x590D;&#x7684;&#x503C;&#xFF0C;&#x82E5;&#x6709;&#x91CD;&#x590D;&#x503C;&#xFF0C;&#x5219;&#x8DF3;&#x51FA;&#x5C0F;&#x5FAA;&#x73AF;&#xFF0C;&#x5224;&#x65AD;&#x4E0B;&#x4E00;&#x4E2A;&#x6570;&#x662F;&#x5426;&#x5728;&#x540E;&#x9762;&#x7684;&#x6570;&#x91CC;&#x9762;&#x6709;&#x91CD;&#x590D;&#x3002;&#x65B9;&#x6CD5;&#x8FC7;&#x4E8E;&#x7B28;&#x62D9;&#xFF0C;&#x5C31;&#x4E0D;&#x8D34;&#x4EE3;&#x7801;&#x4E86;&#x5427;&#x3002;&#x5D4C;&#x5957;&#x5FAA;&#x73AF;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(n2) &#x5F02;&#x6216;&#x6CD5;&#x5148;&#x8BF4;&#x4E00;&#x4E0B;&#x5F02;&#x6216;&#x7684;&#x4E3B;&#x8981;&#x6027;&#x8D28;&#xFF0C;&#x5728;&#x53BB;&#x91CD;&#x548C;&#x627E;&#x91CD;&#x65B9;&#x9762;&#x7ECF;&#x5E38;&#x5E94;&#x7528;&#xFF1A; 0 ^ a = a;a ^ a = 0;&#x53BB;&#x91CD;&#xFF1A;&#x628A;&#x6240;&#x6709;&#x7684; &#x4E0B;&#x9762;&#x662F;&#x6211;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FED;&#x4EE3;&#x5668;&#x4E00;&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x4E3A;O(n)&#xFF1A; 1234567891011121314public static int find1(int[] chopsticks) { if(chopsticks.length &gt;=39) return -1; int result = 0; for(int chopLen:chopsticks) { result ^= chopLen; } return result;}//&#x6D4B;&#x8BD5;public static void main(String[] args) { int[] chopsticks = {1,2,2,3,1,3,4}; System.out.println(find1(chopsticks));} &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;4 Map&#x904D;&#x5386;&#x6CD5;&#x8003;&#x8651;&#x9762;&#x8BD5;&#x5B98;&#x63D0;&#x793A;&#x7684;key-value&#x5B58;&#x50A8;&#x5F62;&#x5F0F;&#xFF0C;&#x5F53;&#x65F6;&#x5361;&#x5728;&#x4E86;map&#x521D;&#x59CB;&#x5316;&#x4E0A;&#xFF0C;&#x8FD8;&#x5F97;&#x591A;&#x52A0;&#x7EC3;&#x4E60; 123456789101112131415161718192021222324252627/** * Map&#x89E3;&#x6CD5; */public static int find2(int[] chopsticks) { //Key&#x4E3A;&#x7B77;&#x5B50;&#x957F;&#x5EA6;&#xFF0C;Value&#x4E3A;&#x4E2A;&#x6570; Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();//&#x521D;&#x59CB;&#x5316;map&#xFF0C;&#x6628;&#x5929;&#x4E5F;&#x5728;&#x8FD9;&#x91CC;&#x5361;&#x4F4F;&#x4E86; for(int i:chopsticks) { if(map.containsKey(i)) { map.put(i, map.get(i)+1);//&#x6709;&#x91CD;&#x590D;&#x5219;&#x6570;&#x503C;+1 } else { map.put(i, 1); } } //&#x904D;&#x5386;map&#xFF0C;&#x91CD;&#x70B9;&#x638C;&#x63E1; for(Integer i:map.keySet()) { if(map.get(i) == 1) { return i; } } return -1;}//&#x6D4B;&#x8BD5;public static void main(String[] args) { int[] chopsticks = {1,2,2,3,1,3,4}; System.out.println(find1(chopsticks));} &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;4 &#x904D;&#x5386;Map&#x7684;&#x51E0;&#x79CD;&#x65B9;&#x6CD5;&#x4EE3;&#x7801;&#x8FC7;&#x7A0B;&#x4E2D;&#x53D1;&#x73B0;&#x5FD8;&#x8BB0;&#x4E86;&#x600E;&#x4E48;&#x904D;&#x5386;map&#x3002;&#x3002;&#x3002;&#x8D76;&#x7D27;&#x590D;&#x4E60;&#x4E00;&#x6CE2;&#x53C2;&#x8003;&#x535A;&#x5BA2;https://www.cnblogs.com/bingyimeiling/p/10741761.html 12345678910111213141516171819202122232425262728293031323334public static void main(String[] args) { // &#x5FAA;&#x73AF;&#x904D;&#x5386;Map&#x7684;4&#x4E2D;&#x65B9;&#x6CD5; Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;(); map.put(1, 2); // 1. entrySet&#x904D;&#x5386;&#xFF0C;&#x5728;&#x952E;&#x548C;&#x503C;&#x90FD;&#x9700;&#x8981;&#x65F6;&#x4F7F;&#x7528;&#xFF08;&#x6700;&#x5E38;&#x7528;&#xFF09; for (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) { System.out.println(&quot;key = &quot; + entry.getKey() + &quot;, value = &quot; + entry.getValue()); } // 2. &#x901A;&#x8FC7;keySet&#x6216;values&#x6765;&#x5B9E;&#x73B0;&#x904D;&#x5386;,&#x6027;&#x80FD;&#x7565;&#x4F4E;&#x4E8E;&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x5F0F; // &#x904D;&#x5386;map&#x4E2D;&#x7684;&#x952E; for (Integer key : map.keySet()) { System.out.println(&quot;key = &quot; + key); } // &#x904D;&#x5386;map&#x4E2D;&#x7684;&#x503C; for (Integer value : map.values()) { System.out.println(&quot;key = &quot; + value); } // 3. &#x4F7F;&#x7528;Iterator&#x904D;&#x5386; Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator(); while (it.hasNext()) { Map.Entry&lt;Integer, Integer&gt; entry = it.next(); System.out.println(&quot;key = &quot; + entry.getKey() + &quot;, value = &quot; + entry.getValue()); } // 4. java8 Lambda // java8&#x63D0;&#x4F9B;&#x4E86;Lambda&#x8868;&#x8FBE;&#x5F0F;&#x652F;&#x6301;&#xFF0C;&#x8BED;&#x6CD5;&#x770B;&#x8D77;&#x6765;&#x66F4;&#x7B80;&#x6D01;&#xFF0C;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x62FF;&#x5230;key&#x548C;value&#xFF0C; // &#x4E0D;&#x8FC7;&#xFF0C;&#x7ECF;&#x6D4B;&#x8BD5;&#xFF0C;&#x6027;&#x80FD;&#x4F4E;&#x4E8E;entrySet,&#x6240;&#x4EE5;&#x66F4;&#x63A8;&#x8350;&#x7528;entrySet&#x7684;&#x65B9;&#x5F0F; map.forEach((key, value) -&gt; { System.out.println(key + &quot;:&quot; + value); });} &#x5982;&#x679C;&#x53EA;&#x662F;&#x83B7;&#x53D6;key&#xFF0C;&#x6216;&#x8005;value&#xFF0C;&#x63A8;&#x8350;&#x4F7F;&#x7528;keySet&#x6216;&#x8005;values&#x65B9;&#x5F0F;&#xFF1B; &#x5982;&#x679C;&#x540C;&#x65F6;&#x9700;&#x8981;key&#x548C;value&#x63A8;&#x8350;&#x4F7F;&#x7528;entrySet&#xFF1B; &#x5982;&#x679C;&#x9700;&#x8981;&#x5728;&#x904D;&#x5386;&#x8FC7;&#x7A0B;&#x4E2D;&#x5220;&#x9664;&#x5143;&#x7D20;&#x63A8;&#x8350;&#x4F7F;&#x7528;Iterator&#xFF1B; &#x5982;&#x679C;&#x9700;&#x8981;&#x5728;&#x904D;&#x5386;&#x8FC7;&#x7A0B;&#x4E2D;&#x589E;&#x52A0;&#x5143;&#x7D20;&#xFF0C;&#x53EF;&#x4EE5;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;map&#x5B58;&#x653E;&#x65B0;&#x589E;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x7B49;&#x904D;&#x5386;&#x5B8C;&#x6BD5;&#xFF0C;&#x518D;&#x628A;&#x4E34;&#x65F6;map&#x653E;&#x5230;&#x539F;&#x6765;&#x7684;map&#x4E2D;&#x3002;]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>面试</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排序]]></title>
    <url>%2F2019%2F08%2F15%2FSort%2F</url>
    <content type="text"><![CDATA[&#x5FEB;&#x901F;&#x6392;&#x5E8F;1234567891011121314151617181920212223242526272829/** * &#x5FEB;&#x901F;&#x6392;&#x5E8F; */public static void quickSort(int[] L, int low, int high) { int pivot;//&#x67A2;&#x7EBD;&#xFF0C;&#x5DE6;&#x8FB9;&#x7684;&#x503C;&#x90FD;&#x6BD4;&#x5B83;&#x5C0F;&#xFF0C;&#x53F3;&#x8FB9;&#x7684;&#x503C;&#x90FD;&#x6BD4;&#x5B83;&#x5927;,&#x662F;&#x4E0B;&#x6807; if(low&lt;high) { pivot = partition(L,low,high);//&#x7B97;&#x51FA;pivot&#xFF0C;&#x5C06;L[low]...L[high]&#x4E00;&#x5206;&#x4E3A;&#x4E8C; quickSort(L, low, pivot-1);//&#x4F4E;&#x5B50;&#x8868;&#x6392;&#x5E8F; quickSort(L, pivot+1, high);//&#x9AD8;&#x5B50;&#x8868;&#x6392;&#x5E8F; }}public static int partition(int[] L,int low,int high) { int key = L[low];//&#x5C06;&#x6570;&#x7EC4;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8BB0;&#x5F55;&#x4F5C;&#x4E3A;pivot while(low&lt;high) { while(low&lt;high &amp;&amp; L[high]&gt;key) {//&#x53F3;&#x8FB9;&#x5927;&#xFF0C;&#x4E0D;&#x4EA4;&#x6362;&#xFF0C;high-1&#x4E0B;&#x4E00;&#x4E2A;high high--; } int temp1 = L[high]; L[high] = L[low]; L[low] = temp1;//&#x53F3;&#x8FB9;&#x6BD4;key&#x5C0F;&#xFF0C;&#x5219;&#x4EA4;&#x6362; while(low&lt;high &amp;&amp; L[low]&lt;key) {//&#x5DE6;&#x8FB9;&#x5C0F;&#xFF0C;&#x4E0D;&#x4EA4;&#x6362;&#xFF0C;low++&#x4E0B;&#x4E00;&#x4E2A;low low++; } int temp2 = L[high]; L[high] = L[low]; L[low] = temp2;//&#x5DE6;&#x8FB9;&#x6BD4;key&#x5927;&#xFF0C;&#x5219;&#x4EA4;&#x6362; } return low;} &#x63D2;&#x5165;&#x6392;&#x5E8F;12345678910111213141516171819/** * &#x63D2;&#x5165;&#x6392;&#x5E8F; */public static void insertSort(int[] L) { for (int i = 1; i &lt; L.length; i++) { if (L[i] &lt; L[i - 1]) {// &#x5728;L[0]...L[i-1]&#x7684;&#x6709;&#x5E8F;&#x6570;&#x5217;&#x4E2D;&#x627E;&#x5230;&#x5408;&#x9002;&#x7684;&#x4F4D;&#x7F6E;&#x63D2;&#x5165;L[i] int temp = L[i];// &#x54E8;&#x5175;&#x4FDD;&#x5B58;L[i]&#x7684;&#x503C; int j; for (j = i-1; j&gt;=0 &amp;&amp; L[j]&gt;temp; j--) { L[j + 1] = L[j];// &#x8BB0;&#x5F55;&#x540E;&#x79FB;,&#x628A;&#x6BD4;a[i]&#x5927;&#x7684;&#x6570;&#x636E;&#x5411;&#x540E;&#x79FB;&#x52A8; } L[j + 1] = temp; } }} &#x9009;&#x62E9;&#x6392;&#x5E8F;1234567891011121314151617181920/** * &#x9009;&#x62E9;&#x6392;&#x5E8F; * @param L */public static void selectSort(int[] L) { for(int i=0;i&lt;L.length;i++) { int min = i;//&#x521D;&#x59CB;&#x4E3A;&#x540C;&#x4E00;&#x4F4D;&#x7F6E;&#xFF0C;&#x5982;&#x679C;i+1&#x6BD4;i&#x5927;&#x5219;min&#x4ECD;&#x7136;&#x4E3A;i.&#x5FAA;&#x73AF;&#x8FDB;&#x5165;i+1&#xFF0C;min&#x4E5F;&#x4E3A;i+1 for(int j=i+1;j&lt;L.length;j++) { if(L[j]&lt;L[min]) min = j;//&#x627E;&#x5230;i&#x540E;&#x9762;&#x7684;&#x6570;&#x636E;&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x4E0B;&#x6807;&#x7ED9;min } if(i!=min) {//&#x6BD4;&#x8F83;&#x7684;&#x662F;&#x4E0B;&#x6807; int temp = L[i]; L[i] = L[min]; L[min] = temp; } }} &#x5192;&#x6CE1;&#x6392;&#x5E8F;&#x4F18;&#x5316;&#x5192;&#x6CE1;&#x6392;&#x5E8F;1234567891011121314151617/** * &#x4F18;&#x5316;&#x5192;&#x6CE1;&#x6392;&#x5E8F;&#xFF0C;&#x5BF9;&#x6709;&#x5E8F;&#x7684;&#x6570;&#x5217;&#x4E0D;&#x518D;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#xFF0C;&#x8BBE;&#x7F6E;flag */public static void bubbleSort2(int[] L) { boolean flag = true; for(int i=0;i&lt;L.length-1 &amp;&amp; flag;i++) {//flag&#x4E3A;false&#x5219;&#x8BF4;&#x660E;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x4EA4;&#x6362;&#xFF0C;&#x9000;&#x51FA;&#x5FAA;&#x73AF;&#xFF1B;&#x82E5;&#x4E3A;true&#x5219;&#x8BF4;&#x660E;&#x53D1;&#x751F;&#x4E86;&#x4EA4;&#x6362;&#xFF0C;&#x4ECD;&#x9700;&#x8FDB;&#x4E00;&#x6B65;&#x5224;&#x65AD;&#x6392;&#x5E8F; flag = false;//&#x521D;&#x59CB;&#x4E3A;false&#xFF0C;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x4EA4;&#x6362; for(int j=L.length-1;j&gt;i;j--) { if(L[j-1]&gt;L[j]) {//&#x4EA4;&#x6362; int temp = L[j]; L[j] = L[j-1]; L[j-1] = temp; flag = true; } } }} &#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x591A;&#x7EBF;&#x7A0B;&#x61D2;&#x6C49;&#x5F0F;1234567891011121314151617public class Singleton { private static volatile Singleton instance; private Singleton() { } public static Singleton getInstance() { if(null == instance) { synchronized(Singleton.class) { if(null == instance) { instance = new Singleton(); } } } return instance; }} volatile &#x7684;&#x5FC5;&#x8981;&#x6027;&#xFF1A;new &#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#x5206;&#x4E3A;&#x4E09;&#x4E2A;&#x6B65;&#x9AA4;,&#x8BF7;&#x6C42;&#x5BF9;&#x8C61;&#x7A7A;&#x95F4;&#xFF0C;&#x5BF9;&#x8C61;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x6307;&#x9488;&#x6307;&#x5411;&#x5BF9;&#x8C61;&#x3002;volatile&#x4FDD;&#x8BC1;&#x4E86;&#x4E0D;&#x53D1;&#x751F;&#x6307;&#x4EE4;&#x91CD;&#x6392;&#xFF0C;&#x907F;&#x514D;&#x5728;if&#x5224;&#x65AD;&#x65F6;&#xFF0C;double check&#x591A;&#x7EBF;&#x7A0B;&#x51FA;&#x9519;]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JSP语法, EL, JSTL, JSON，Ajax辨析]]></title>
    <url>%2F2019%2F08%2F12%2Fjson-ajax-jstl-el%2F</url>
    <content type="text"><![CDATA[TODO&#x524D;&#x8A00;&#x5BF9;&#x524D;&#x7AEF;&#x4E86;&#x89E3;&#x4E0D;&#x591A;&#xFF0C;&#x5728;Web&#x5F00;&#x53D1;&#x7684;&#x5B66;&#x4E60;&#x4E2D;&#xFF0C;&#x65F6;&#x4E0D;&#x65F6;&#x4F1A;&#x9047;&#x5230;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x524D;&#x7AEF;&#x8BED;&#x6CD5;&#x7684;&#x56F0;&#x6270;&#xFF0C;&#x591A;&#x79CD;&#x76F8;&#x4F3C;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x6DF7;&#x7528;&#x96BE;&#x514D;&#x86CB;&#x75BC;&#x3002;&#x867D;&#x8BF4;&#x5DF2;&#x6709;&#x5404;&#x79CD;&#x6846;&#x67B6;&#x89E3;&#x51B3;&#x4E86;&#x5BF9;&#x8FD9;&#x4E9B;&#x524D;&#x7AEF;&#x811A;&#x672C;&#x7684;&#x89E3;&#x6790;&#xFF0C;&#x4F46;&#x672C;&#x6587;&#x65E8;&#x5728;&#x5217;&#x4E3E;&#x548C;&#x68B3;&#x7406;&#x5176;&#x4E2D;&#x7684;&#x77E5;&#x8BC6;&#x4F53;&#x7CFB;&#xFF0C;&#x4EE5;&#x514D;&#x518D;&#x6DF7;&#x6DC6;&#x3002; JSP&#x8BED;&#x6CD5;&#x4E0E;JSP&#x811A;&#x672C;&#x6B64;&#x5904;&#x53C2;&#x8003;&#x4E86;&#x535A;&#x5BA2;https://segmentfault.com/a/1190000013152739#articleHeader5 JSP(Java Server Page), Java&#x670D;&#x52A1;&#x5668;&#x754C;&#x9762;&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x7B80;&#x5316;&#x7684;Servlet&#xFF0C;&#x4E3B;&#x8981;&#x7279;&#x70B9;&#x662F;JSP&#x4E2D;java&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x548C;&#x9875;&#x9762;html&#x4EE3;&#x7801;&#x7EC4;&#x5408;&#x4F7F;&#x7528;&#x3002;&#x6B64;&#x5904;&#x4E0D;&#x7EC6;&#x8BB2;&#x5176;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x548C;&#x5185;&#x5BB9;&#x3002;&#x672C;&#x6587;&#x4E3B;&#x8981;&#x5173;&#x6CE8;&#x5176;&#x8BED;&#x6CD5;&#x4E0E;&#x811A;&#x672C;&#x4E66;&#x5199;&#x3002; JSP&#x521D;&#x5370;&#x8C61; &#x5728;&#x6700;&#x7B80;&#x5355;&#x7684;Web&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;IDE&#x521D;&#x59CB;&#x751F;&#x6210;&#x7684;JSP&#x9875;&#x9762;index.jsp,&#x518D;&#x9875;&#x9762;&#x4E2D;&#x4F7F;&#x7528;Java&#x8F93;&#x51FA;Hello World&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=utf-8&quot; pageEncoding=&quot;utf-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;ISO-8859-1&quot;&gt; &lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;%String s = &quot;HelloWorld&quot;;//&#x6B64;&#x5904;&#x4E3A;Java&#x4EE3;&#x7801;out.println(s);%&gt;&lt;/body&gt;&lt;/html&gt; JSP&#x8BED;&#x6CD5; &#x4ECE;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x770B;&#x5230;&#xFF0C;JSP&#x4E2D;&#x5305;&#x542B;&#x4E86;HTML&#x4EE3;&#x7801;&#x548C;Java&#x4EE3;&#x7801; JSP&#x811A;&#x672C;JSP&#x4E2D;&#x7684;Java&#x4EE3;&#x7801;&#x5C31;&#x662F;JSP&#x811A;&#x672C;&#xFF0C;&#x5FC5;&#x987B;&#x6709;&lt;% %&gt;&#x62EC;&#x8D77;&#x6765;&#xFF0C;&#x5426;&#x5219;jsp&#x4F1A;&#x5C06;&#x5176;&#x89E3;&#x6790;&#x4E3A;HTML&#x4EE3;&#x7801;&#xFF0C;&#x51FA;&#x73B0;&#x89E3;&#x6790;&#x504F;&#x5DEE;&#x6216;&#x51FA;&#x9519;&#x3002; 1234&lt;%String s = &quot;HelloWorld&quot;;//&#x6B64;&#x5904;&#x4E3A;Java&#x4EE3;&#x7801;out.println(s);%&gt; JSP&#x5185;&#x5BB9;&#x8F93;&#x51FA;&#x8868;&#x8FBE;&#x5F0F;&lt;%= %&gt; &#x7528;&#x4E8E;&#x5728;JSP&#x4E2D;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;Java&#x53D8;&#x91CF; 12345678910....&lt;body&gt;&lt;%User user = (User) session.getAttribute(&quot;user&quot;);//jsp&#x7684;session&#x5185;&#x7F6E;&#x5BF9;&#x8C61;%&gt;&#x7528;&#x6237;&#x540D;&lt;%=user.getUsername() %&gt;&lt;br/&gt;&#x5E74;&#x9F84;&lt;%=user.getAge() %&gt;&lt;br/&gt;&#x6027;&#x522B;&lt;%=user.getGender() %&gt;&lt;br/&gt;&lt;/body&gt;.... JSP&#x5185;&#x5BB9;&#x5B9A;&#x4E49;&#x8868;&#x8FBE;&#x5F0F;&lt;%! %&gt; JSP&#x5B9A;&#x4E49;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7528;&#x4E8E;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x5728;Java&#x4EE3;&#x7801;&#x5757;&#x91CC;&#x7684;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002;&#x4F46;&#x5DF2;&#x7ECF;&#x6CA1;&#x4EBA;&#x7528;&#x4E86; JSP&#x6CE8;&#x91CA;&lt;%-- --%&gt; &#x4E0D;&#x8D77;&#x4EFB;&#x4F55;&#x5B9E;&#x9645;&#x4F5C;&#x7528; &#x8FD8;&#x53EF;&#x4EE5;&#x6CE8;&#x91CA; &lt;% %&gt; &#x5728;java&#x4EE3;&#x7801;&#x4E2D;&#x4F9D;&#x7136;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;java&#x652F;&#x6301;&#x7684;&#x6CE8;&#x91CA;: 1234///***/ JSP&#x6307;&#x4EE4;JSP&#x7528;&#x4E8E;&#x58F0;&#x660E;JSP&#x9875;&#x9762;&#x7684;&#x76F8;&#x5173;&#x5C5E;&#x6027;&#xFF0C;&#x8BED;&#x6CD5;&#x4E3A; 1&lt;%@&#x6307;&#x4EE4; &#x5C5E;&#x6027;&#x540D;=&quot;&#x503C;&quot; %&gt; &#x5982;&#x5728;JSP&#x521D;&#x5370;&#x8C61;&#x4E2D;&#xFF0C;&#x5236;&#x5B9A;&#x4E86;JSP&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x6587;&#x6863;&#x7C7B;&#x578B;&#xFF0C;&#x7F16;&#x7801;&#x7C7B;&#x578B; 12&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=utf-8&quot; pageEncoding=&quot;utf-8&quot;%&gt; JSP&#x6307;&#x4EE4;&#x8FD8;&#x53EF;&#x7528;&#x4E8E;&#x5728;jsp&#x4E2D;&#x5F15;&#x5165;java&#x7C7B; 12&lt;%@page import=&quot;java.util.Random&quot;%&gt;&lt;%@page import=&quot;java.util.Random,java.text.*&quot;%&gt; EL&#x8868;&#x8FBE;&#x5F0F;EL&#xFF08;Expression Language&#xFF09;&#x8868;&#x8FBE;&#x5F0F;&#x8BED;&#x8A00;&#xFF0C;&#x662F;&#x4E3A;&#x4E86;&#x4F7F;JSP&#x5199;&#x8D77;&#x6765;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x3002;&#x4E0D;&#x5C5E;&#x4E8E;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x3002;&#x7528;&#x4E8E;&#x67E5;&#x627E;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x5B83;&#x4EEC;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x7528;&#x4E8E;&#x5BF9;jsp&#x6807;&#x7B7E;&#x7684;&#x5C5E;&#x6027;&#x8D4B;&#x503C; &#x5728;MVC&#x6A21;&#x5F0F;&#x4E2D;, JSP&#x53EA;&#x5145;&#x5F53;&#x89C6;&#x56FE;&#xFF0C;&#x89C6;&#x56FE;&#x7684;&#x4EFB;&#x52A1;&#x5C31;&#x662F;&#x663E;&#x793A;&#x54CD;&#x5E94;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x5728;JSP&#x4E2D;&#x505A;&#x4EFB;&#x4F55;&#x5173;&#x4E8E;&#x7A0B;&#x5E8F;&#x63A7;&#x5236;&#x548C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x6240;&#x4EE5;&#x5728;JSP&#x9875;&#x9762;&#x4E2D;&#x5E94;&#x8BE5;&#x5C3D;&#x53EF;&#x80FD;&#x5C11;&#x7684;&#x3001;&#x6216;&#x8005;&#x662F;&#x5B8C;&#x5168;&#x4E0D;&#x51FA;&#x73B0;Java&#x4EE3;&#x7801;&#x3002;&#x6765;&#x81EA;&#x767E;&#x5EA6;&#x767E;&#x79D1; EL&#x80FD;&#x5E72;&#x4EC0;&#x4E48;&#x53EF;&#x4EE5;&#x4ECE;&#x57DF;&#x5BF9;&#x8C61;&#xFF08;request, session, application, pageContext&#x7B49;&#xFF09;&#x4E2D;&#x53D6;&#x5F97;&#x6570;&#x636E;&#x3002; &#x65E0;&#x9700;&#x5BFC;&#x5305;&#xFF0C;&#x53EF;&#x76F4;&#x63A5;&#x5728;JSP&#x4E2D;&#x4F7F;&#x7528;&#x3002; EL&#x8868;&#x8FBE;&#x5F0F;&#x8BED;&#x6CD5;&#x7ED3;&#x6784;123456${expression}${requestScope.key}${pageContextScope.key}${sessionScope.key}${applicationScope.key}${key} &lt;%--&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#x57DF;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x4F9D;&#x6B21;&#x4ECE;&#x57DF;&#x4E2D;&#x641C;&#x7D22;--%&gt; EL&#x4E3E;&#x4F8B;123456789${username} &#x53D6;&#x5F97;request&#x91CC;&#x9762;&#x540D;&#x5B57;&#x4E3A;username&#x7684;&#x5C5E;&#x6027;&#x503C;&#xFF08;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x8FD4;&#x56DE;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF09;${user.username}${list[index]}${map.key}${pageContext.request.contextPath}${10+89} &#x652F;&#x6301;&#x653E;&#x7F6E;&#x8868;&#x8FBE;&#x5F0F;&#x8FD0;&#x7B97;${age&gt;10}${empty user} &#x662F;&#x5426;&#x662F;null&#x5BF9;&#x8C61; &#x8FD0;&#x7B97;&#x7B26;&#x53F7;&#x6700;&#x597D;&#x5728;{}&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#xFF0C;&#x6BD4;&#x5982;${a.count*b.price},&#x800C;&#x4E0D;&#x80FD;&#x5199;&#x6210;${a.count}*${b.price} JSTL&#x6B64;&#x5904;&#x53C2;&#x8003;&#x4E86;&#x535A;&#x5BA2;https://blog.csdn.net/qq_42350238/article/details/88994988 JSTL&#xFF08;JavaServer Pages Standard Tag Library&#xFF0C;JSP&#x6807;&#x51C6;&#x6807;&#x7B7E;&#x5E93;)&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x65AD;&#x5B8C;&#x5584;&#x7684;&#x5F00;&#x6E90;&#x7684;JSP&#x6807;&#x7B7E;&#x5E93;,&#x901A;&#x5E38;&#x4E0E;EL&#x8868;&#x8FBE;&#x5F0F;&#x5408;&#x4F5C;&#x5B9E;&#x73B0;JSP&#x9875;&#x9762;&#x7684;&#x7F16;&#x5199;&#xFF0C;&#x8BA9;JSP&#x5199;&#x8D77;&#x6765;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#xFF0C;&#x4F18;&#x96C5;&#x3002;&#x53EF;&#x4EE5;&#x8BA9;JSP&#x9875;&#x9762;&#x5728;&#x4E0D;&#x5199;java&#x4EE3;&#x7801;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x5B9E;&#x73B0;&#x53D6;&#x6570;&#x636E;&#x3002; jstl&#x662F;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#x5E93;&#xFF0C;&#x4EC0;&#x4E48;&#x662F;&#x6807;&#x7B7E;&#x5E93;&#xFF1F;&#x53EF;&#x4EE5;&#x53EA;&#x7528;&#x4E00;&#x4E9B;&#x81EA;&#x5B9A;&#x4E49;&#x6709;&#x81EA;&#x5B9A;&#x4E49;&#x529F;&#x80FD;&#x7684;&#x6807;&#x7B7E;&#x3002; &#x5176;&#x5B9E;EL+JSTL&#x6807;&#x7B7E;&#x6BD4;java&#x4EE3;&#x7801;&#x597D;&#x7528;&#xFF0C;&#x5C31;&#x524D;&#x7AEF;&#x6765;&#x8BF4;&#xFF0C;&#x800C;&#x4E14;&#x5B83;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x64CD;&#x4F5C;json&#x7C7B;&#x578B;&#xFF0C;&#x5B8C;&#x7F8E;&#x9002;&#x5E94;&#x3002; JSTL&#x7684;&#x5F15;&#x5165;&#x4E0B;&#x8F7D;&#x5730;&#x5740; http://tomcat.apache.org/taglibs/standard/ &#x8981;&#x4F7F;&#x7528;jstl&#x63D0;&#x4F9B;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x8981;&#x5148;&#x5F15;&#x5165;JSTL&#x5BF9;&#x5E94;&#x7684;&#x6807;&#x7B7E;&#x5E93;taglib &#x5982;&#x4F55;&#x5F15;&#x5165;jstl&#x6807;&#x7B7E;&#x5E93;&#xFF1A;(&#x5229;&#x7528;JSP&#x6307;&#x4EE4;&#x7684;&#x8BED;&#x6CD5;) 12&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/fmt&quot; prefix=&quot;fmt&quot; %&gt; &#x5C31;&#x53EF;&#x4EE5;&#x5F15;&#x5165;&#x5BF9;&#x5E94;&#x60F3;&#x8981;&#x7684;&#x6807;&#x7B7E;&#x5E93;&#xFF0C;&#x5176;&#x4E2D; uri&#xFF1A;JSP&#x6807;&#x7B7E;&#x7684;&#x547D;&#x540D;&#x7A7A;&#x95F4; prefix&#xFF1A;&#x547D;&#x540D;&#x7A7A;&#x95F4;&#x7684;&#x524D;&#x7F00;(&#x7B80;&#x79F0;) JSTL&#x7684;&#x4F7F;&#x7528;(&#x5E38;&#x7528;&#x6807;&#x7B7E;&#x4E3E;&#x4F8B;)&#x8DDF;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x76F8;&#x5173;&#xFF1A; set, out, remove123456789101112&lt;c:set var=&quot;username&quot; value=&quot;123&quot; scope=&quot;request&quot;&gt;&lt;/c:set&gt;&lt;%//request.setAttribute(&quot;username&quot;, &quot;123&quot;);%&gt;&lt;c:out value=&quot;${username }&quot;&gt;&lt;/c:out&gt;${username}&lt;c:remove var=&quot;username&quot; scope=&quot;request&quot; /&gt;&lt;%//request.removeAttribute(&quot;username&quot;);%&gt; &#x6761;&#x4EF6;&#x6807;&#x7B7E;if &#x8BED;&#x53E5; 123&lt;c:if test=&quot;${age&gt;=19 }&quot;&gt;&lt;font color=&quot;green&quot;&gt;&#x4F60;&#x662F;&#x6210;&#x5E74;&#x4EBA;&lt;/font&gt;&lt;/c:if&gt; if else &#x8BED;&#x53E5; 12345678&lt;c:choose&gt;&lt;c:when test=&quot;${age&gt;=19 }&quot;&gt;&lt;font color=&quot;green&quot;&gt;&#x4F60;&#x662F;&#x6210;&#x5E74;&#x4EBA;&lt;/font&gt;&lt;/c:when&gt;&lt;c:otherwise&gt;&lt;font color=&quot;red&quot;&gt;&#x672A;&#x6210;&#x5E74;&lt;/font&gt;&lt;/c:otherwise&gt;&lt;/c:choose&gt; &#x5FAA;&#x73AF;&#x6807;&#x7B7E;1234567&lt;c:forEach items=&quot;${lists }&quot; var=&quot;user&quot;&gt;${user.username }:${user.age }&lt;br/&gt;&lt;/c:forEach&gt;&lt;c:forEach items=&quot;${map }&quot; var=&quot;kv&quot;&gt;${kv.key }:${kv.value }&lt;br/&gt;&lt;/c:forEach&gt;&#xFF08;&#x8981;&#x7ED9;&#x5C5E;&#x6027;&#x63D0;&#x4F9B;get&#x65B9;&#x6CD5;&#xFF09; JSONJSON (JavaScript Object Notation, JS&#x5BF9;&#x8C61;&#x8868;&#x8FBE;) &#x662F;&#x4E00;&#x79CD;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#x6570;&#x636E;&#x4EA4;&#x6362;&#x683C;&#x5F0F;,&#x91C7;&#x7528;&#x5B8C;&#x5168;&#x72EC;&#x7ACB;&#x4E8E;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x7684;&#x6587;&#x672C;&#x683C;&#x5F0F;&#x6765;&#x5B58;&#x50A8;&#x548C;&#x8868;&#x793A;&#x6570;&#x636E;. &#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x53EF;&#x53C2;&#x8003;http://www.json.org/json-zh.html JSON&#x53EA;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x53EF;&#x88AB;&#x89E3;&#x6790;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5176;&#x672C;&#x8D28;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32; JSON&#x51FA;&#x73B0;&#x4E4B;&#x524D;&#xFF0C;&#x901A;&#x5E38;&#x7528;XML&#x6765;&#x4F20;&#x9012;&#x6570;&#x636E;&#x3002;XML&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x7EAF;&#x6587;&#x672C;&#x683C;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x9002;&#x5408;&#x5728;&#x7F51;&#x7EDC;&#x4E0A;&#x4EA4;&#x6362;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x7531;&#x4E8E;XML&#x89C4;&#x8303;&#x7E41;&#x7410;&#x590D;&#x6742;&#xFF0C; &#x683C;&#x5F0F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x7ED3;&#x6784;&#x3002; JSON&#x4E24;&#x79CD;&#x7ED3;&#x6784;&#x5BF9;&#x8C61;&#x5BF9;&#x8C61;&#x7ED3;&#x6784;&#x4EE5;{&#x5927;&#x62EC;&#x53F7;&#x5F00;&#x59CB;&#xFF0C;&#x4EE5;}&#x5927;&#x62EC;&#x53F7;&#x7ED3;&#x675F;&#x3002;&#x5185;&#x90E8;&#x7531;&#x591A;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#x6784;&#x6210;&#xFF0C;&#x952E;&#x503C;&#x5BF9;&#x4E4B;&#x95F4;&#x7531;,&#x5206;&#x9694;: 1234567891011121314{ &quot;name&quot;: &quot;&#x5C0F;&#x660E;&quot;, &quot;age&quot;: 14, &quot;gender&quot;: true, &quot;height&quot;: 1.65, &quot;grade&quot;: null, &quot;middle-school&quot;: &quot;\&quot;W3C\&quot; Middle School&quot;, &quot;skills&quot;: [ &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Python&quot;, &quot;Lisp&quot; ]} &#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A;JavaBean&#xFF0C;&#x5BF9;&#x8C61;&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A; &#x6570;&#x7EC4;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x662F;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;&#xFF0C;&#x5373;&#x5143;&#x7D20;&#x662F;&#x5BF9;&#x8C61;&#x3002;&#x7531;&#x65B9;&#x62EC;&#x53F7;[ ]&#x89C4;&#x5B9A;&#x3002; 12345678910[ { &quot;name&quot;: &quot;&#x5C0F;&#x660E;&quot;, &quot;age&quot;: 14, }, { &quot;name&quot;: &quot;&#x5C0F;&#x534E;&quot;, &quot;age&quot;: 22, }] JSON&#x6CE8;&#x610F;&#x4E8B;&#x9879; JSON&#x89C4;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x5FC5;&#x987B;&#x662F;UTF-8&#x3002; &#x4E3A;&#x4E86;&#x7EDF;&#x4E00;&#x89E3;&#x6790;&#xFF0C;JSON&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x89C4;&#x5B9A;&#x5FC5;&#x987B;&#x7528;&#x53CC;&#x5F15;&#x53F7;&quot;&quot;&#xFF0C;Object&#x7684;&#x952E;&#x4E5F;&#x5FC5;&#x987B;&#x7528;&#x53CC;&#x5F15;&#x53F7;&quot;&quot;&#x3002; &#x6B64;&#x5904;&#x53C2;&#x8003;&#x4E86;&#x5ED6;&#x96EA;&#x5CF0;&#x7684;&#x5B98;&#x65B9;&#x7F51;&#x7AD9;&#x5BF9;JS&#x7684;&#x8BB2;&#x89E3; JSON&#x5B57;&#x7B26;&#x4E32;&#x4E0E;JSON&#x5BF9;&#x8C61;&#x8FA8;&#x6790; &#x5B57;&#x7B26;&#x4E32;&#xFF1A;&#x6307;&#x4F7F;&#x7528;&#x201C;&#x201D;&#x53CC;&#x5F15;&#x53F7;&#x6216;&#x2019;&#x2019;&#x5355;&#x5F15;&#x53F7;&#x5305;&#x62EC;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x4F8B;&#x5982;&#xFF1A;var comStr = &#x2018;this is string&#x2019;; json&#x5B57;&#x7B26;&#x4E32;&#xFF1A;&#x6307;&#x7684;&#x662F;&#x7B26;&#x5408;json&#x683C;&#x5F0F;&#x8981;&#x6C42;&#x7684;js&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x4F8B;&#x5982;&#xFF1A;var jsonStr = &#x201C;{StudentID:&#x2019;100&#x2019;,Name:&#x2019;tmac&#x2019;,Hometown:&#x2019;usa&#x2019;}&#x201D;; json&#x5BF9;&#x8C61;&#xFF1A;&#x6307;&#x7B26;&#x5408;json&#x683C;&#x5F0F;&#x8981;&#x6C42;&#x7684;js&#x5BF9;&#x8C61;&#x3002;&#x4F8B;&#x5982;&#xFF1A;var jsonObj = { StudentID: &#x201C;100&#x201D;, Name: &#x201C;tmac&#x201D;, Hometown: &#x201C;usa&#x201D; }; &#x6B64;&#x5904;&#x53C2;&#x8003;&#x4E86;mcgrady&#x7684;&#x535A;&#x5BA2; AjaxAjax, &#x5373;&#x201C;Asynchronous Javascript And XML&#x201D;&#xFF08;&#x5F02;&#x6B65; JavaScript &#x548C; XML&#xFF09;&#xFF0C;&#x662F;&#x6307;&#x4E00;&#x79CD;&#x521B;&#x5EFA;&#x4EA4;&#x4E92;&#x5F0F;&#x7F51;&#x9875;&#x5E94;&#x7528;&#x7684;&#x7F51;&#x9875;&#x5F00;&#x53D1;&#x6280;&#x672F;&#x3002;&#x662F;&#x4E00;&#x79CD;&#x5728;&#x65E0;&#x9700;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x6574;&#x4E2A;&#x7F51;&#x9875;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x80FD;&#x591F;&#x66F4;&#x65B0;&#x90E8;&#x5206;&#x7F51;&#x9875;&#x7684;&#x6280;&#x672F;&#x3002; &#x6700;&#x5E38;&#x7528;&#x7684;&#x5E94;&#x7528;&#x5C31;&#x662F;&#x5728;&#x524D;&#x7AEF;&#x6CE8;&#x518C;&#x4FE1;&#x606F;&#x65F6;&#xFF0C;&#x4E0D;&#x5237;&#x65B0;&#x7F51;&#x9875;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6821;&#x9A8C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x91CD;&#x590D;&#x7684;&#x7528;&#x6237;&#x540D;&#xFF0C;&#x6216;&#x8005;&#x6821;&#x9A8C;&#x8F93;&#x5165;&#x7684;&#x90AE;&#x7BB1;&#x683C;&#x5F0F;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002; &#x4F5C;&#x7528;&#xFF1A;&#x5728;&#x4E0D;&#x8FDB;&#x884C;&#x9875;&#x9762;&#x8DF3;&#x8F6C;&#x6216;&#x8005;&#x9875;&#x9762;&#x5237;&#x65B0;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5411;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x5E76;&#x53D6;&#x5F97;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x7684;&#x6570;&#x636E;&#x3002; &#x5E94;&#x7528;&#x9886;&#x57DF;&#xFF1A;&#x6570;&#x636E;&#x6821;&#x9A8C; &#x4F18;&#x70B9;&#xFF1A; &#x2460;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#x6BD4;&#x8F83;&#x597D;(&#x4E0D;&#x9700;&#x8981;&#x9875;&#x9762;&#x8DF3;&#x8F6C;&#xFF0C;&#x901F;&#x5EA6;&#x5FEB;) &#x2461;&#x670D;&#x52A1;&#x5668;&#x538B;&#x529B;&#x6BD4;&#x8F83;&#x5C0F; jQuery&#x53D1;&#x8D77;Ajax&#x8BF7;&#x6C42;123456789101112$.ajax({ url:&quot;xxxservlet&quot;, type:&quot;post&quot;, data:{ key:value, key:value }, dataType:&quot;json&quot;, success:function(msg){ msg.key; }}); &#x5176;&#x4ED6;&#x53C2;&#x6570;&#x548C;&#x7528;&#x6CD5;http://api.jquery.com/jQuery.ajax/ JavaScript&#x53D1;&#x8D77;Ajax&#x8BF7;&#x6C42;12345678var xmlhttp = new XMLHttpRequest();xmlhttp.open(&quot;GET&quot;,&quot;xxxservlet&quot;,true);xmlhttp.send();xmlhttp.onreadystatechange=function(){ if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200){ //&#x6210;&#x529F;&#x540E;&#x7684;&#x5904;&#x7406; }} &#x5176;&#x4ED6;&#x53C2;&#x6570;&#x548C;&#x7528;&#x6CD5;http://www.w3school.com.cn/ajax/ajax_xmlhttprequest_send.asp]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>JSP</tag>
        <tag>Web</tag>
        <tag>EL</tag>
        <tag>JSTL</tag>
        <tag>Ajax</tag>
        <tag>JSON</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LeetCode Database做题笔记]]></title>
    <url>%2F2019%2F08%2F05%2FLeetcode-Database%2F</url>
    <content type="text"><![CDATA[TODO &#x4E0D;&#x8FDE;&#x63A5;&#x4EA4;&#x53C9;&#x8FDE;&#x63A5;(&#x5373;&#x7528;,&#x5728;from&#x4E2D;&#x5206;&#x9694;&#x4E24;&#x8868;)&#x548C;&#x5185;&#x8FDE;&#x63A5;&#x7684;&#x533A;&#x522B;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x90FD;&#x53EF;&#x4EE5;&#x4EA7;&#x751F;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#xFF1F; &#x8FDE;&#x63A5;&#x65F6;&#x7528;&#x7684;on&#x548C;&#x5224;&#x65AD;&#x65F6;&#x7528;&#x7684;where&#x5982;&#x4F55;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#xFF0C;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x65F6;&#x5982;&#x4F55;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#xFF1F;&#x8BE6;&#x89C1;183&#x65B9;&#x6CD5;&#x4E00; &#x4F7F;&#x7528;group by&#x65F6;&#xFF0C;&#x53EA;&#x8981;&#x662F;select&#x4E2D;&#x975E;&#x805A;&#x96C6;&#x51FD;&#x6570;&#x7684;&#x5217;&#xFF0C;&#x90FD;&#x8981;&#x5728; group by&#x5F53;&#x4E2D; NOTE1. &#x4EA4;&#x53C9;&#x8FDE;&#x63A5;&#x4E0E;&#x9690;&#x5F0F;&#x5185;&#x8FDE;&#x63A5;&#x7684;&#x533A;&#x522B;&#x4E2A;&#x4EBA;&#x7406;&#x89E3;&#x662F;&#xFF0C;&#x6CA1;&#x6709;where&#x5C31;&#x662F;&#x4EA4;&#x53C9;&#x8FDE;&#x63A5;&#xFF0C;&#x6709;where&#x5C31;&#x662F;&#x9690;&#x5F0F;&#x5185;&#x8FDE;&#x63A5;&#x3002;&#x4EA7;&#x751F;&#x7684;&#x4E2D;&#x95F4;&#x8868;&#x5747;&#x4E3A;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#xFF0C;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x9690;&#x5F0F;&#x5185;&#x8FDE;&#x63A5;&#x4F1A;&#x5BF9;&#x4EA7;&#x751F;&#x7684;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#x901A;&#x8FC7;where&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#x5F97;&#x5230;&#x7ED3;&#x679C;&#x3002; 12SELECT * FROM &#x8868;1 CROSS JOIN &#x8868;2; --&#x4EA4;&#x53C9;&#x8FDE;&#x63A5;SELECT * FROM &#x8868;1&#xFF0C;&#x8868;2 &#x9690;&#x5F0F;&#x5185;&#x8FDE;&#x63A5;&#x4E0D;&#x7528;on&#x8BED;&#x53E5;&#xFF0C;&#x800C;&#x7528;where 1SELECT * FROM &#x8868;1,&#x8868;2 where &#x8868;1.&#x5173;&#x7CFB;&#x5B57;&#x6BB5; = &#x8868;2.&#x5173;&#x7CFB;&#x5B57;&#x6BB5; --&#x9690;&#x5F0F;&#x5185;&#x8FDE;&#x63A5; 2. on, where, having&#x7684;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x6B64;&#x5904;&#x53C2;&#x8003;&#x4E86;&#x53E4;&#x6708;&#x6155;&#x5357;&#x548C;LYQ1990&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x4E2A;&#x4EBA;&#x7406;&#x89E3;&#x662F; on&#x7528;&#x4E8E;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#x5173;&#x7CFB;, where&#x7528;&#x4E8E;&#x7B5B;&#x9009;&#x5173;&#x8054;&#x5173;&#x7CFB;&#x3002; on&#x662F;&#x7528;&#x4E8E;&#x751F;&#x6210;&#x4E34;&#x65F6;&#x8868;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x6761;&#x4EF6;&#x3002;&#x5728;&#x5916;&#x8FDE;&#x63A5;&#x4E2D;&#xFF0C;&#x4E0D;&#x7BA1;on&#x7684;&#x6761;&#x4EF6;&#x662F;&#x5426;&#x4E3A;&#x771F;&#xFF0C;&#x90FD;&#x4F1A;&#x8FD4;&#x56DE;left join&#x4E2D;&#x7684;&#x5DE6;&#x8868;&#x4FE1;&#x606F;&#xFF0C;&#x6216;&#x8005;right join&#x4E2D;&#x7684;&#x53F3;&#x8868;&#x4FE1;&#x606F;&#x3002; where&#x662F;&#x5728;&#x4E34;&#x65F6;&#x8868;&#x751F;&#x6210;&#x4E4B;&#x540E;&#x5BF9;&#x8BE5;&#x4E34;&#x65F6;&#x8868;&#x8FC7;&#x6EE4;&#x7528;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x8FC7;&#x6EE4;&#x6389;&#x6761;&#x4EF6;&#x4E0D;&#x4E3A;&#x771F;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#x3002; &#x5728;&#x5185;&#x8FDE;&#x63A5;&#x4E2D;&#xFF0C;&#x6761;&#x4EF6;&#x653E;&#x5728;on&#x548C;where&#x6CA1;&#x533A;&#x522B;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x96C6;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002; &#x5728;&#x4F18;&#x5148;&#x7EA7;&#x65B9;&#x9762;&#xFF0C;on &gt; where &gt; &#x805A;&#x5408;&#x51FD;&#x6570; &gt; having: &#x8868;&#x5173;&#x8054;&#x751F;&#x6210;&#x4E34;&#x65F6;&#x8868;&#xFF0C; on &#x6761;&#x4EF6;&#x751F;&#x6548;&#xFF08;&#x6B64;&#x65F6;&#x7684;&#x4E34;&#x65F6;&#x8868;&#x4F1A;&#x56E0;&#x4E3A;left join&#x6216;right join&#x7684;&#x7279;&#x6027;&#x800C;&#x4E00;&#x5B9A;&#x5E26;&#x6709;&#x4E3B;&#x8868;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E3B;&#x8868;&#x7684;&#x8BB0;&#x5F55;&#x4E0D;&#x4F1A;&#x88AB; on &#x6761;&#x4EF6;&#x8FC7;&#x6EE4;&#x6389;&#xFF09; &#x2013;&gt; &#x4E34;&#x65F6;&#x8868;&#x751F;&#x6210;&#x5B8C;&#x6BD5;&#xFF0C;where&#x6761;&#x4EF6;&#x8FC7;&#x6EE4;&#x4E34;&#x65F6;&#x8868;&#xFF08;where&#x6761;&#x4EF6;&#x8FC7;&#x6EE4;&#x65F6;&#x56E0;&#x4E3A;&#x4E34;&#x65F6;&#x8868;&#x5DF2;&#x7ECF;&#x751F;&#x6210;&#x5B8C;&#x6BD5;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x4F1A;&#x518D;&#x5177;&#x6709;left join&#x6216;right join&#x7684;&#x7279;&#x6027;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E3B;&#x8868;&#x8BB0;&#x5F55;&#x4E5F;&#x4F1A;&#x88AB;where&#x6761;&#x4EF6;&#x8FC7;&#x6EE4;&#x6389;&#xFF09; &#x2013;&gt; &#x4E34;&#x65F6;&#x8868;&#x8FC7;&#x6EE4;&#x5B8C;&#x6BD5;&#xFF0C;&#x805A;&#x5408;&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x8FD0;&#x7B97; &#x2013;&gt; &#x805A;&#x5408;&#x51FD;&#x6570;&#x8FD0;&#x7B97;&#x5B8C;&#x6BD5;&#xFF0C;having&#x751F;&#x6548;&#x5BF9;&#x8FD0;&#x7B97;&#x5B8C;&#x6BD5;&#x7684;&#x4E34;&#x65F6;&#x8868;&#x8FDB;&#x884C;&#x8FC7;&#x6EE4; &#x2013;&gt;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x8868; &#x539F;&#x6587;&#x94FE;&#x63A5;&#xFF1A;https://blog.csdn.net/qq_27607579/article/details/83787592 having&#x53EA;&#x4E0E;group by &#x8FDE;&#x7528;&#xFF0C; &#x5373;&#x5728;&#x5206;&#x7EC4;&#x8FC7;&#x540E;&#x8FC7;&#x6EE4;&#x6570;&#x636E;&#xFF0C;&#x6761;&#x4EF6;&#x4E2D;&#x901A;&#x5E38;&#x5305;&#x542B;&#x805A;&#x5408;&#x51FD;&#x6570;&#x3002; &#x2460; WHERE &#x5B50;&#x53E5;&#x7528;&#x6765;&#x7B5B;&#x9009; FROM &#x5B50;&#x53E5;&#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x64CD;&#x4F5C;&#x6240;&#x4EA7;&#x751F;&#x7684;&#x884C;&#x3002;&#x2461; GROUP BY &#x5B50;&#x53E5;&#x7528;&#x6765;&#x5206;&#x7EC4; WHERE &#x5B50;&#x53E5;&#x7684;&#x8F93;&#x51FA;&#x3002;&#x2462; HAVING &#x5B50;&#x53E5;&#x7528;&#x6765;&#x4ECE;&#x5206;&#x7EC4;&#x7684;&#x7ED3;&#x679C;&#x4E2D;&#x7B5B;&#x9009;&#x884C;&#x3002; 181. Employees Earning More Than Their Managers&#x6765;&#x6E90;&#xFF1A;https://leetcode.com/problems/employees-earning-more-than-their-managers/description/&#x8003;&#x5BDF;&#xFF1A;&#x540C;&#x4E00;&#x4E2A;&#x8868;&#x5185;&#x7684;&#x4FE1;&#x606F;&#x5BF9;&#x6BD4;&#xFF0C;&#x9700;&#x8981;&#x628A;&#x4E00;&#x5F20;&#x8868;&#x770B;&#x4F5C;&#x4E24;&#x5F20;&#x8868;&#x5206;&#x522B;&#x5BF9;&#x6BD4;&#x6761;&#x4EF6;&#x8FDB;&#x884C;&#x67E5;&#x8BE2;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4ECE;&#x8FD9;&#x4E2A;&#x8868;&#x91CC;&#x83B7;&#x53D6;&#x4E24;&#x6B21;&#x4FE1;&#x606F;&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x5230;&#x5185;&#x8FDE;&#x63A5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x5185;&#x8FDE;&#x63A5;&#x76F4;&#x63A5;&#x67E5;&#x8BE2;&#x3002; DescriptionEmployee &#x8868;&#x5305;&#x542B;&#x6240;&#x6709;&#x5458;&#x5DE5;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x7ECF;&#x7406;&#x4E5F;&#x5C5E;&#x4E8E;&#x5458;&#x5DE5;&#x3002;&#x6BCF;&#x4E2A;&#x5458;&#x5DE5;&#x90FD;&#x6709;&#x4E00;&#x4E2A; Id&#xFF0C;&#x6B64;&#x5916;&#x8FD8;&#x6709;&#x4E00;&#x5217;&#x5BF9;&#x5E94;&#x5458;&#x5DE5;&#x7684;&#x7ECF;&#x7406;&#x7684; Id&#x3002; 12345678+----+-------+--------+-----------+| Id | Name | Salary | ManagerId |+----+-------+--------+-----------+| 1 | Joe | 70000 | 3 || 2 | Henry | 80000 | 4 || 3 | Sam | 60000 | NULL || 4 | Max | 90000 | NULL |+----+-------+--------+-----------+ &#x7ED9;&#x5B9A; Employee &#x8868;&#xFF0C;&#x7F16;&#x5199;&#x4E00;&#x4E2A; SQL &#x67E5;&#x8BE2;&#xFF0C;&#x8BE5;&#x67E5;&#x8BE2;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x6536;&#x5165;&#x8D85;&#x8FC7;&#x4ED6;&#x4EEC;&#x7ECF;&#x7406;&#x7684;&#x5458;&#x5DE5;&#x7684;&#x59D3;&#x540D;&#x3002;&#x5728;&#x4E0A;&#x9762;&#x7684;&#x8868;&#x683C;&#x4E2D;&#xFF0C;Joe &#x662F;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x6536;&#x5165;&#x8D85;&#x8FC7;&#x4ED6;&#x7684;&#x7ECF;&#x7406;&#x7684;&#x5458;&#x5DE5;&#x3002; 12345+----------+| Employee |+----------+| Joe |+----------+ Solution&#x6B64;&#x5904;&#x8FD8;&#x8981;&#x6CE8;&#x610F;&#x9898;&#x76EE;&#x8FD8;&#x8981;&#x6C42;&#x6700;&#x7EC8;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x7684;&#x8868;&#x5934;&#x4E3A;Employee &#x65B9;&#x6CD5;&#x4E00;&#xFF1A;12345select e1.Name as Employee --&#x66F4;&#x6539;&#x5B57;&#x6BB5;&#x540D;,as&#x53EF;&#x7F3A;&#x7701;from Employee e1, Employee e2where e1.ManagerId = e2.Idand e1.Salary &gt; e2.Salary;--&#x7528;&#x65F6;461 ms &#x5728;where&#x8BED;&#x53E5;&#x4E4B;&#x524D;&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x4EA4;&#x53C9;&#x8FDE;&#x63A5;&#x4EA7;&#x751F;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#xFF0C;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x6709;4&#xD7;4=16&#x4E2A;&#x3002;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x4E0D;&#x4F1A;&#x4F7F;&#x7528;&#x4EA4;&#x53C9;&#x8FDE;&#x63A5;&#xFF0C;&#x8FD9;&#x8FD9;&#x4E1A;&#x52A1;&#x9700;&#x6C42;&#x6BD4;&#x8F83;&#x5C11;&#x89C1;&#x3002;&#x5728;&#x6709;where&#x8BED;&#x53E5;&#x65F6;&#xFF0C;&#x8BED;&#x53E5;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x9690;&#x6027;&#x5185;&#x8FDE;&#x63A5;&#xFF0C;&#x4EA7;&#x751F;&#x7684;&#x4E2D;&#x95F4;&#x8868;&#x4ECD;&#x4E3A;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#xFF0C;&#x7ED3;&#x679C;&#x7528;where&#x8BED;&#x53E5;&#x8FC7;&#x6EE4;&#x6389; &#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;&#x5185;&#x8FDE;&#x63A5;12345select e1.Name as Employeefrom Employee e1 inner join Employee e2--inner&#x53EF;&#x7F3A;&#x7701;on e1.ManagerId = e2.Idand e1.Salary &gt; e2.Salary;--615 ms &#x65B9;&#x6CD5;&#x4E09;&#xFF1A;&#x5B50;&#x67E5;&#x8BE2;123456select e1.Name as Employeefrom Employee e1where Salary &gt; (select Salary from Employee e2 where e2.Id = e1.ManagerId);--974 ms 183. Customers Who Never Order&#x6765;&#x6E90;&#xFF1A;https://leetcode.com/problems/customers-who-never-order/description/&#x8003;&#x5BDF;&#xFF1A;&#x67E5;&#x627E;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8FDE;&#x63A5;&#x7528;is null,&#x5B50;&#x67E5;&#x8BE2;&#x7528;not in Description&#x67D0;&#x7F51;&#x7AD9;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x8868;&#xFF0C;Customers &#x8868;&#x548C; Orders &#x8868;&#x3002;&#x7F16;&#x5199;&#x4E00;&#x4E2A; SQL &#x67E5;&#x8BE2;&#xFF0C;&#x627E;&#x51FA;&#x6240;&#x6709;&#x4ECE;&#x4E0D;&#x8BA2;&#x8D2D;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#x7684;&#x5BA2;&#x6237;&#x3002; Customers &#x8868;&#xFF1A; 12345678+----+-------+| Id | Name |+----+-------+| 1 | Joe || 2 | Henry || 3 | Sam || 4 | Max |+----+-------+ Orders &#x8868;&#xFF1A; 123456+----+------------+| Id | CustomerId |+----+------------+| 1 | 3 || 2 | 1 |+----+------------+ &#x4F8B;&#x5982;&#x7ED9;&#x5B9A;&#x4E0A;&#x8FF0;&#x8868;&#x683C;&#xFF0C;&#x4F60;&#x7684;&#x67E5;&#x8BE2;&#x5E94;&#x8FD4;&#x56DE;&#xFF1A; 123456+-----------+| Customers |+-----------+| Henry || Max |+-----------+ Solution&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;&#x5DE6;&#x5916;&#x8FDE;&#x63A5;&#x8981;&#x67E5;&#x8BE2;Orders&#x8868;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x4F46;&#x5728;Customers&#x8868;&#x4E2D;&#x5B58;&#x5728;&#x7684;CustomerId,&#x628A;Orders&#x653E;&#x5728;&#x5DE6;&#x8FDE;&#x63A5;&#x7684;&#x53F3;&#x8FB9;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x67E5;&#x8BE2;&#x51FA;Orders&#x4E2D;CustomerId&#x4E3A;null&#x7684;&#x6570;&#x636E; 1234select c.Name as Customersfrom Customers c left join Orders oon c.Id = o.CustomerIdwhere o.CustomerId is null; &#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;&#x5B50;&#x67E5;&#x8BE2;&#x67E5;&#x8BE2;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;where&#x4E0E;not in&#x7ED3;&#x5408;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5229;&#x7528;&#x5B50;&#x67E5;&#x8BE2; 123select Name as Customersfrom Customerswhere Id not in (select CustomerId from Orders) 184. Department Highest Salary&#x6765;&#x6E90;&#xFF1A;https://leetcode.com/problems/department-highest-salary/description/&#x8003;&#x5BDF;&#xFF1A;&#x4F7F;&#x7528;join&#x548C;in&#x3002;in&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x591A;&#x4E2A;&#x5B57;&#x6BB5;,&#x5B50;&#x67E5;&#x8BE2;&#x6216;&#x4E34;&#x65F6;&#x8868; DescriptionEmployee &#x8868;&#x5305;&#x542B;&#x6240;&#x6709;&#x5458;&#x5DE5;&#x4FE1;&#x606F;&#xFF0C;&#x6BCF;&#x4E2A;&#x5458;&#x5DE5;&#x6709;&#x5176;&#x5BF9;&#x5E94;&#x7684; Id, salary &#x548C; department Id&#x3002; 12345678+----+-------+--------+--------------+| Id | Name | Salary | DepartmentId |+----+-------+--------+--------------+| 1 | Joe | 70000 | 1 || 2 | Henry | 80000 | 2 || 3 | Sam | 60000 | 2 || 4 | Max | 90000 | 1 |+----+-------+--------+--------------+ Department &#x8868;&#x5305;&#x542B;&#x516C;&#x53F8;&#x6240;&#x6709;&#x90E8;&#x95E8;&#x7684;&#x4FE1;&#x606F;&#x3002; 123456+----+----------+| Id | Name |+----+----------+| 1 | IT || 2 | Sales |+----+----------+ &#x7F16;&#x5199;&#x4E00;&#x4E2A; SQL &#x67E5;&#x8BE2;&#xFF0C;&#x627E;&#x51FA;&#x6BCF;&#x4E2A;&#x90E8;&#x95E8;&#x5DE5;&#x8D44;&#x6700;&#x9AD8;&#x7684;&#x5458;&#x5DE5;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6839;&#x636E;&#x4E0A;&#x8FF0;&#x7ED9;&#x5B9A;&#x7684;&#x8868;&#x683C;&#xFF0C;Max &#x5728; IT &#x90E8;&#x95E8;&#x6709;&#x6700;&#x9AD8;&#x5DE5;&#x8D44;&#xFF0C;Henry &#x5728; Sales &#x90E8;&#x95E8;&#x6709;&#x6700;&#x9AD8;&#x5DE5;&#x8D44;&#x3002; 123456+------------+----------+--------+| Department | Employee | Salary |+------------+----------+--------+| IT | Max | 90000 || Sales | Henry | 80000 |+------------+----------+--------+ Solution&#x9996;&#x5148;&#x53EF;&#x4EE5;&#x5728;Employee&#x8868;&#x4E2D;&#x6839;&#x636E;DepartmentId&#x5206;&#x7EC4;&#x627E;&#x5230;&#x6BCF;&#x7EC4;&#x6700;&#x9AD8;Salary&#x6240;&#x4EE3;&#x8868;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x8868;&#xFF0C;&#x5305;&#x542B;&#x4E86;&#x90E8;&#x95E8;&#x5458;&#x5DE5;&#x7684;&#x6700;&#x5927;&#x85AA;&#x8D44;&#xFF1A;&#x6B64;&#x5904;&#x7279;&#x522B;&#x6CE8;&#x610F;: select&#x4E2D;&#x975E;&#x805A;&#x96C6;&#x51FD;&#x6570;&#x7684;&#x5217;&#xFF0C;&#x90FD;&#x8981;&#x5728; group by &#x4E2D; 123select DepartmentId, max(Salary)from Employeegroup by DepartmentId &#x5F97;&#x51FA;&#x7ED3;&#x679C;&#x4E3A; 1234| DepartmentId | MAX(Salary) ||--------------|-------------|| 1 | 90000 || 2 | 80000 | &#x7136;&#x540E;&#xFF0C;&#x628A;&#x8868; Employee &#x548C; Department &#x8FDE;&#x63A5;&#xFF0C;&#x518D;&#x5728;&#x8FD9;&#x5F20;&#x4E34;&#x65F6;&#x8868;&#x91CC;&#x7528; IN&#x8BED;&#x53E5;&#x67E5;&#x8BE2;&#x90E8;&#x95E8;&#x540D;&#x5B57;&#x548C;&#x5DE5;&#x8D44;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x5728;in&#x8BED;&#x53E5;&#x4E2D;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x5B57;&#x6BB5; 12345select d.Name Department, e.Name Employee, Salaryfrom Department d join Employee e on d.Id = e.DepartmentIdwhere (e.DepartmentId, Salary) in ( select DepartmentId, max(Salary) from Employee group by DepartmentId );]]></content>
      <categories>
        <category>笔试</category>
      </categories>
      <tags>
        <tag>面试</tag>
        <tag>笔试</tag>
        <tag>LeetCode</tag>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java笔试题常用输入方法]]></title>
    <url>%2F2019%2F07%2F30%2Fscanner_input%2F</url>
    <content type="text"><![CDATA[&#x4ECE;&#x4E09;&#x6708;&#x4EFD;&#x627E;&#x5B9E;&#x4E60;&#x5F00;&#x59CB;&#xFF0C;&#x6211;&#x624D;&#x7B97;&#x662F;&#x771F;&#x6B63;&#x610F;&#x8BC6;&#x5230;&#x81EA;&#x5DF1;&#x6709;&#x591A;&#x83DC;&#x3002;&#x7ECF;&#x5386;&#x4E86;&#x6570;&#x4E0D;&#x6E05;&#x591A;&#x5C11;&#x6B21;&#x7684;&#x7B14;&#x8BD5;&#xFF0C;&#x7B97;&#x6CD5;&#x65B9;&#x9762;&#x83DC;&#x9E21;&#x4E5F;&#x5C31;&#x7B97;&#x4E86;&#xFF0C;&#x6CA1;&#x60F3;&#x5230;&#x51E0;&#x4E4E;&#x6BCF;&#x6B21;&#x8003;&#x8BD5;&#x90FD;&#x4F1A;&#x5728;&#x8F93;&#x5165;&#x65B9;&#x9762;&#x5361;&#x58F3;&#x534A;&#x4E2A;&#x5C0F;&#x65F6;&#x5DE6;&#x53F3;&#x3002;&#x8FD9;&#x6B21;7.28&#x53F7;&#x62FC;&#x591A;&#x591A;&#x201C;&#x5B66;&#x9738;&#x6279;&#x201D;&#x7684;&#x7B14;&#x8BD5;&#xFF0C;&#x4E5F;&#x662F;&#x5728;&#x8F93;&#x5165;&#x65B9;&#x9762;&#x6D6A;&#x8D39;&#x4E86;&#x5927;&#x91CF;&#x65F6;&#x95F4;&#x3002;&#x4E3A;&#x6B64;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#x7B14;&#x8BD5;&#x53EF;&#x80FD;&#x4F1A;&#x7528;&#x5230;&#x7684;&#x8F93;&#x5165;&#x65B9;&#x6CD5;&#xFF0C;&#x5403;&#x4E00;&#x5811;&#x957F;&#x4E00;&#x667A;&#x3002;&#x672C;&#x6587;&#x6301;&#x7EED;&#x66F4;&#x65B0;&#x3002; &#x7C7B;&#x578B;&#x4E00;&#xFF1A;&#x591A;&#x884C;&#x8F93;&#x5165;&#xFF0C;&#x6BCF;&#x884C;&#x4E3A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00; 1234567891011121314151617Scanner in = new Scanner(System.in);String str1 = in.nextLine().toString();//&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x884C;String[] a = str1.split(&quot; &quot;);//&#x6309;&#x7A7A;&#x683C;&#x5206;&#x5F00;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;int[] arrA = new int[a.length];//&#x65B0;&#x5EFA;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x6574;&#x578B;&#x6570;&#x7EC4;for (int i = 0; i &lt; arrA.length; i++) { arrA[i] = Integer.parseInt(a[i]);//&#x5B57;&#x7B26;&#x4E32;&#x89E3;&#x6790;&#x4E3A;&#x5341;&#x8FDB;&#x5236;&#x6574;&#x6570;}String str2 = in.nextLine().toString();//&#x8BFB;&#x53D6;&#x7B2C;&#x4E8C;&#x884C;&#xFF0C;&#x540E;&#x9762;&#x51E0;&#x884C;&#x540C;&#x7406;String[] b = str2.split(&quot; &quot;);int[] arrB = new int[b.length];for (int i = 0; i &lt; arrB.length; i++) { arrB[i] = Integer.parseInt(b[i]);}System.out.println(Arrays.toString(arrA));//&#x663E;&#x793A;&#x6570;&#x7EC4;System.out.println(Arrays.toString(arrB)); &#x7C7B;&#x578B;&#x4E8C;&#xFF1A;&#x7B2C;&#x4E00;&#x884C;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x6B64;&#x7C7B;&#x578B;&#x7684;&#x8F93;&#x5165;&#x4E0D;&#x533A;&#x5206;&#x5404;&#x884C;&#xFF0C;&#x53EA;&#x5224;&#x5B9A;&#x7B2C;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#x4E3A;&#x6570;&#x7EC4;&#x5927;&#x5C0F;&#xFF0C;&#x4E4B;&#x540E;&#x7684;&#x6574;&#x6570;&#x4E3A;&#x6570;&#x7EC4;&#x6570;&#x636E;&#x5373;&#x53EF;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x53EA;&#x6309;&#x6574;&#x578B;&#x8F93;&#x5165;&#x8BFB;&#x53D6;&#x3002; 1234567891011121314151617 /** * &#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x6574;&#x6570;(&#x6570;&#x7EC4;&#x5927;&#x5C0F;)&#xFF0C;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;(&#x7A7A;&#x683C;&#x6216;&#x56DE;&#x8F66;&#x9694;&#x5F00;) * 2 * 1 3 * @author YJC * */Scanner in = new Scanner(System.in);while(in.hasNext()) { int m = in.nextInt();//&#x8BFB;&#x53D6;&#x7B2C;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5373;&#x6570;&#x7EC4;&#x5927;&#x5C0F; int[] numbers = new int[m];//&#x65B0;&#x5EFA;&#x6570;&#x7EC4; for(int i=0;i&lt;m;i++) { numbers[i] = in.nextInt();//&#x6309;&#x6574;&#x578B;&#x8F93;&#x5165;&#x8BFB;&#x53D6; } System.out.println(Arrays.toString(numbers));} &#x7C7B;&#x578B;&#x4E09;&#xFF1A;&#x8F93;&#x5165;&#x591A;&#x884C;&#x6574;&#x6570;&#x7528;&#x9017;&#x53F7;&#x9694;&#x5F00; &#x8F93;&#x5165; 120,3,55 &#x4EE3;&#x7801;&#x5982;&#x4E0B; 12345Scanner in = new Scanner(System.in);String[] line = in.nextLine().split(&quot;,&quot;);int a = Integer.parseInt(line[0]);int b = Integer.parseInt(line[1]);int c = Integer.parseInt(line[2]);]]></content>
      <categories>
        <category>笔试</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>输入</tag>
        <tag>笔试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java实现单链表，实现链表的插入和删除]]></title>
    <url>%2F2019%2F07%2F30%2FlinkedList%2F</url>
    <content type="text"><![CDATA[&#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x7C7B;&#x548C;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x6765;&#x5B9E;&#x73B0;&#x7B80;&#x5355;&#x7684;&#x5355;&#x94FE;&#x8868;&#x3002;&#x5C06;&#x7ED3;&#x70B9;&#x7ED3;&#x6784;&#x5B9A;&#x4E49;&#x4E3A;&#x79C1;&#x6709;&#x5185;&#x90E8;&#x7C7B;&#xFF0C;&#x5728;&#x5916;&#x90E8;&#x7C7B;&#x4E2D;&#x5BF9;&#x94FE;&#x8868;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5305;&#x62EC;&#x5934;&#x7ED3;&#x70B9;&#x548C;&#x521D;&#x59CB;&#x5927;&#x5C0F;&#x3002; &#x5355;&#x94FE;&#x8868;&#x64CD;&#x4F5C;&#x539F;&#x7406;&#x4E0D;&#x96BE;&#xFF0C;&#x96BE;&#x70B9;&#x5728;&#x4E8E;&#x5BF9;&#x94FE;&#x8868;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x5BF9;&#x4E8E;&#x6307;&#x9488;&#x4EA4;&#x6362;&#x548C;&#x5206;&#x914D;&#x7684;&#x903B;&#x8F91;&#x3002; &#x63D2;&#x5165;&#xFF1A;&#x627E;&#x5230;&#x8981;&#x63D2;&#x5165;&#x7684;&#x4F4D;&#x7F6E; i &#x540E;&#xFF0C;&#x7528;&#x65B0;&#x7ED3;&#x70B9;&#x7684;&#x540E;&#x7EE7;&#x6307;&#x9488;&#x66FF;&#x6362; i &#x7684;&#x540E;&#x7EE7;&#x6307;&#x9488;&#xFF0C;&#x518D;&#x5C06; i &#x7684;&#x540E;&#x7EE7;&#x6307;&#x9488;&#x6307;&#x5411;&#x8BE5;&#x65B0;&#x7ED3;&#x70B9;&#x3002; &#x5220;&#x9664;&#xFF1A;&#x5C06;&#x8981;&#x5220;&#x9664;&#x4F4D;&#x7F6E;&#x7684;&#x540E;&#x7EE7;&#x6307;&#x9488;&#x6307;&#x5411;&#x4E0B;&#x4E0B;&#x4E2A;&#x5143;&#x7D20;&#x3002; &#x6574;&#x8868;&#x521B;&#x5EFA;&#xFF1A;&#x6CE8;&#x610F;&#x5934;&#x63D2;&#x6CD5;&#x548C;&#x5C3E;&#x63D2;&#x6CD5;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x8BE6;&#x89C1;&#x4EE3;&#x7801;&#x6CE8;&#x91CA; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990package SqList;/** * &#x5355;&#x94FE;&#x8868; * @author YJC * */public class SingleLinkedList { //&#x5B9A;&#x4E49;&#x94FE;&#x8868; private int size;//&#x94FE;&#x8868;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570; private Node head;//&#x5934;&#x8282;&#x70B9; public SingleLinkedList() { size = 0; head = null; } //&#x94FE;&#x8868;&#x7684;&#x7ED3;&#x70B9;&#x7C7B; private class Node{ private Object data;//&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x6570;&#x636E; private Node next;//&#x7ED3;&#x70B9;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x6307;&#x9488; public Node(Object data) { this.data = data; } } //&#x67E5;&#x627E;&#x94FE;&#x8868;&#x4E2D;&#x7B2C;i&#x4E2A;&#x5143;&#x7D20;,&#x8FD4;&#x56DE;&#x7ED9;e public Node find(int i,Object e) { Node current = head; int temp = 1; while(temp&lt;i) { current = current.next; temp++; } e = current; return (Node) e; } //&#x5728;&#x7B2C;i&#x4E2A;&#x4F4D;&#x7F6E;&#x524D;&#x63D2;&#x5165;&#x65B0;&#x7684;&#x5143;&#x7D20;e public Object insert(int i,Object e) { Node newNode = new Node(e);//&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x8282;&#x70B9; Node current = head; int temp = 1; while(temp&lt;i) { current = current.next; temp++; } newNode.next = current.next; current.next = newNode; return newNode; } //&#x5220;&#x9664;&#x7B2C;i&#x4E2A;&#x7ED3;&#x70B9; public void delete(int i) { int temp = 1; Node current = head; while(temp&lt;i &amp;&amp; current!=null) { current = current.next; temp++; } current.next = current.next.next; } //&#x5355;&#x94FE;&#x8868;&#x7684;&#x6574;&#x8868;&#x521B;&#x5EFA;,&#x5934;&#x63D2;&#x6CD5; &#x52A0;&#x5165;n&#x4E2A;&#x5143;&#x7D20;&#x5230;&#x5355;&#x94FE;&#x8868; public void createAtHead(int n) { Node head = null;//&#x5934;&#x7ED3;&#x70B9;&#x6307;&#x5411;null&#xFF0C;&#x5373;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x5E26;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#x5355;&#x94FE;&#x8868; for(int i=0;i&lt;n;i++) { Node node = new Node(Math.random()*100+1);//&#x751F;&#x6210;1-100&#x7684;&#x6570;&#x5B57; node.next = head; head = node; } } public void createAtTail(int n) { for (int i = 0; i &lt; n; i++) { Node node = new Node(Math.random() * 100 + 1);// &#x751F;&#x6210;1-100&#x7684;&#x6570;&#x5B57; Node tempNode = head; while (null != tempNode.next) { tempNode = tempNode.next;//&#x5BFB;&#x627E;&#x5C3E;&#x7ED3;&#x70B9; } //&#x6B64;&#x65F6;tempNode&#x662F;&#x5C3E;&#x7ED3;&#x70B9; node.next = tempNode.next;//null&#xFF0C;&#x628A;node&#x5B9A;&#x4E49;&#x4E3A;&#x5C3E;&#x7ED3;&#x70B9;&#xFF0C;&#x540E;&#x7EE7;&#x6307;&#x9488;&#x4E3A;null tempNode.next = node;//&#x5F53;&#x524D;&#x5C3E;&#x7ED3;&#x70B9;&#x7684;&#x540E;&#x7EE7;&#x6307;&#x9488;&#x6307;&#x5411;node } }}]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>链表</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
